{"version":3,"sources":["Border/Border.js","Context/Context.js","InputForm/InputForm.js","apikey/apikey.js","Charts/ChartLine.js","Charts/RevenueEarning.js","Financials/Recommendation.js","Financials/IncomeStatement.js","NavBar/BrowseFinancial.js","Financials/BalanceSheet.js","Financials/CashFlow.js","Financials/BrowseBar.js","App.js","index.js"],"names":["Border","_ref","children","nameClass","react_default","a","createElement","className","Context","React","createContext","InputForm","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_useState3","_useState4","valid","setValid","_useState5","_useState6","classChange","setClassChange","_useContext","useContext","_useContext2","context","setContext","type","onChange","e","target","toUpperCase","length","maxlength","onClick","console","log","preventDefault","style","color","financialmodelingprepApikey","finnhubApikey","ChartLine","info","setInfo","date","setDate","_fetchChartMonth","asyncToGenerator","regenerator_default","mark","_callee","res","data","HistoricalData","wrap","_context","prev","next","fetch","concat","sent","json","historical","t0","stockPrice","slice","map","price","close","stockDate","abrupt","reverse","stop","apply","this","arguments","useEffect","fetchChartMonth","id","name","index_modern","labels","datasets","label","fill","borderColor","tension","RevenueEarning","revenue","fetchData","setFetchData","_fetchRevenueEarningYear","element","toFixed","eps","fetchRevenueEarningYear","backgroundColor","options","responsive","Recommendation","buy","hold","strongBuy","strongSell","dataRecommend","setDataRecommend","_fetchRecommendations","period","fetchRecommendations","plugins","title","display","text","scales","x","stacked","y","IncomeStatement","symbol","costofgoodsandservicessold","netincomeloss","researchanddevelopmentexpense","grossprofit","othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax","othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax","othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax","weightedaveragenumberofdilutedsharesoutstanding","weightedaveragenumberofsharesoutstandingbasic","operatingincomeloss","nonoperatingincomeexpense","incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest","othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax","earningspersharebasic","incometaxexpensebenefit","othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax","revenuefromcontractwithcustomerexcludingassessedtax","earningspersharediluted","operatingexpenses","othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax","sellinggeneralandadministrativeexpense","othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax","othercomprehensiveincomelossnetoftaxportionattributabletoparent","comprehensiveincomenetoftax","dataInfo","setDataInfo","_fetchCashFlow","undefined","researchanddevelopmentexpenses","fetchCashFlow","item","NaN","BrowseFinancial","react_router_dom","to","BalanceSheet","liabilitiesandstockholdersequity","liabilities","liabilitiescurrent","commonstocksharesauthorized","cashandcashequivalentsatcarryingvalue","retainedearningsaccumulateddeficit","liabilitiesnoncurrent","propertyplantandequipmentnet","commonstocksincludingadditionalpaidincapital","commercialpaper","longtermdebtcurrent","commonstocksharesoutstanding","otherliabilitiesnoncurrent","marketablesecuritiescurrent","otherliabilitiescurrent","assetscurrent","longtermdebtnoncurrent","contractwithcustomerliabilitycurrent","nontradereceivablescurrent","commonstocksharesissued","stockholdersequity","accountsreceivablenetcurrent","accountspayablecurrent","assets","assetsnoncurrent","otherassetscurrent","otherassetsnoncurrent","inventorynet","marketablesecuritiesnoncurrent","accumulatedothercomprehensiveincomelossnetoftax","_fetchBalanceSheet","longtermdebtnoncurren","fetchBalanceSheet","CashFlow","netIncome","depreciationAndAmortization","deferredIncomeTax","stockBasedCompensation","changeInWorkingCapital","accountsReceivables","inventory","accountsPayables","otherWorkingCapital","otherNonCashItems","netCashProvidedByOperatingActivities","investmentsInPropertyPlantAndEquipment","acquisitionsNet","purchasesOfInvestments","salesMaturitiesOfInvestments","otherInvestingActivites","netCashUsedForInvestingActivites","debtRepayment","commonStockIssued","commonStockRepurchased","dividendsPaid","otherFinancingActivites","netCashUsedProvidedByFinancingActivities","effectOfForexChangesOnCash","netChangeInCash","cashAtEndOfPeriod","cashAtBeginningOfPeriod","operatingCashFlow","capitalExpenditure","freeCashFlow","_fetchIncomeStatement","fetchIncomeStatement","BrowseBar","BrowseFinancial_BrowseFinancial","react_router","path","CashFlow_CashFlow","IncomeStatement_IncomeStatement","BalanceSheet_BalanceSheet","App","Provider","BrowseBar_BrowseBar","RevenueEarning_RevenueEarning","Recommendation_Recommendation","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2d672b50.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/App.css\";\nexport default function Border({ children, nameClass }) {\n  return <div className={nameClass}> {children}</div>;\n}\n","import React from \"react\";\n\nexport const Context = React.createContext();\n","import Border from \"../Border/Border\";\nimport React, { useContext } from \"react\";\nimport \"../css/App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Context } from \"../Context/Context\";\nexport default function InputForm() {\n  const [value, setValue] = useState(\"\");\n  const [valid, setValid] = useState(false);\n  const [classChange, setClassChange] = useState(\"InputStock\");\n  const [context, setContext] = useContext(Context);\n  const validCheck = (e) => {\n    setValue(e.target.value.toUpperCase());\n    if (e.target.value.length >= 5) {\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n    if (valid === true) {\n      setClassChange(\"InputStockInvalid\");\n    } else {\n      setClassChange(\"InputStock\");\n    }\n  };\n  // setContext(value);\n  const onSubmit = (e) => {\n    console.log(context);\n    setContext(value);\n    // console.log(context);\n    e.preventDefault();\n  };\n\n  return (\n    <Border nameClass=\"Border\">\n      <div className=\"InputPlacement\">\n        <p> Enter a stock symbol :</p>\n        <input\n          type=\"text\"\n          className={classChange}\n          onChange={validCheck}\n          maxlength=\"4\"\n        ></input>\n        <h1> For example: {context}</h1>\n        <input type=\"submit\" className=\"Submit\" onClick={onSubmit}></input>\n        {valid && (\n          <p style={{ color: \"red\" }}>\n            Not valid, please use less than 4 letters\n          </p>\n        )}\n      </div>\n    </Border>\n  );\n}\n","export const financialmodelingprepApikey = \"39caf286d742842fbd4649b05b6eff0d\";\nexport const finnhubApikey = \"c7eaef2ad3ifpe0p8dkg\";\n","import React, { useContext } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Chart from \"chart.js/auto\";\nimport { useState, useEffect } from \"react\";\nimport { Context } from \"../Context/Context\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nexport default function ChartLine() {\n  const [context, setContext] = useContext(Context);\n  console.log(context);\n  const [info, setInfo] = useState({});\n  const [date, setDate] = useState(\"Week\");\n  async function fetchChartMonth() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-price-full/${context}?serietype=line&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    const HistoricalData = data.historical;\n    switch (date) {\n      case \"Week\":\n        setInfo({\n          stockPrice: HistoricalData.slice(0, 8).map((price) => {\n            return price.close;\n          }),\n          stockDate: HistoricalData.slice(0, 8).map((date) => {\n            return date.date;\n          }),\n        });\n        break;\n      case \"Month\":\n        setInfo({\n          stockPrice: HistoricalData.slice(0, 31).map((price) => {\n            return price.close;\n          }),\n          stockDate: HistoricalData.slice(0, 31).map((date) => {\n            return date.date;\n          }),\n        });\n        break;\n      case \"Year\":\n        setInfo({\n          stockPrice: HistoricalData.slice(0, 366)\n            .reverse()\n            .map((price) => {\n              return price.close;\n            }),\n          stockDate: HistoricalData.slice(0, 366)\n            .reverse()\n            .map((date) => {\n              return date.date;\n            }),\n        });\n        break;\n    }\n  }\n  useEffect(() => {\n    fetchChartMonth();\n  }, [date, context]);\n\n  const handleChange = (e) => {\n    console.log(e.target.value);\n    setDate(e.target.value);\n  };\n  return (\n    <div className=\"ChartLine\">\n      <select id=\"cars\" name=\"cars\" onChange={handleChange}>\n        <option value=\"Week\">Week</option>\n        <option value=\"Month\">Month</option>\n        <option value=\"Year\">Year</option>\n      </select>\n      <Line\n        data={{\n          labels: info.stockDate,\n          datasets: [\n            {\n              label: `${context} Price:`,\n              data: info.stockPrice,\n              fill: true,\n              borderColor: \"rgb(75,192,192)\",\n              tension: 0.1,\n            },\n          ],\n        }}\n      ></Line>\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Context } from \"../Context/Context\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\n\nexport const RevenueEarning = () => {\n  const [context, setContext] = useContext(Context);\n  const [fetchData, setFetchData] = useState({\n    revenue: \"\",\n    date: \"\",\n  });\n  const [period, setPeriod] = useState(\"Quarter\");\n\n  async function fetchRevenueEarningYear() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/income-statement/${context}?limit=120&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    setFetchData({\n      revenue: data\n        .slice(0, 5)\n        .map((element) => element.revenue.toFixed(1) / 1000000)\n        .reverse(),\n      date: data\n        .slice(0, 5)\n        .map((element) => element.date.slice(0, 4))\n        .reverse(),\n    });\n  }\n  console.log(fetchData.eps, fetchData.revenue);\n\n  useEffect(() => {\n    fetchRevenueEarningYear();\n  }, [context]);\n\n  const options = {\n    responsive: true,\n  };\n  const labels = fetchData.date;\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: `${context} Revenue to Millions`,\n        data: fetchData.revenue,\n        backgroundColor: \"rgba(255,99,132,0.5)\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"Revenue\">\n      <Bar options={options} data={data} />\n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Chart from \"chart.js/auto\";\nimport { Context } from \"../Context/Context\";\nimport { finnhubApikey } from \"../apikey/apikey\";\n\nexport const Recommendation = () => {\n  const [context, setContext] = useContext(Context);\n  const [dataRecommend, setDataRecommend] = useState({\n    buy: \"\",\n    hold: \"\",\n    strongBuy: \"\",\n    strongSell: \"\",\n    date: \"\",\n  });\n  async function fetchRecommendations() {\n    const res = await fetch(\n      `https://finnhub.io/api/v1/stock/recommendation?symbol=${context}&token=${finnhubApikey}`\n    );\n    const data = await res.json();\n    setDataRecommend({\n      buy: data\n        .map((data) => {\n          return data.buy;\n        })\n        .reverse(),\n      hold: data\n        .map((data) => {\n          return data.hold;\n        })\n        .reverse(),\n      strongBuy: data\n        .map((data) => {\n          return data.strongBuy;\n        })\n        .reverse(),\n      strongSell: data\n        .map((data) => {\n          return data.strongSell;\n        })\n        .reverse(),\n      date: data\n        .map((data) => {\n          return data.period;\n        })\n        .reverse(),\n    });\n    // setDataRecommend({\n    //   buy: data\n    // })\n  }\n  console.log(dataRecommend);\n  useEffect(() => fetchRecommendations(), [context]);\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Chart.js Bar Chart - Stacked\",\n      },\n    },\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n      },\n    },\n  };\n\n  const labels = dataRecommend.date;\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Strong Sell\",\n        data: dataRecommend.strongSell,\n        backgroundColor: \"rgb(255, 99, 132)\",\n      },\n      {\n        label: \"Hold\",\n        data: dataRecommend.hold,\n        backgroundColor: \"rgb(255, 255, 102)\",\n      },\n      {\n        label: \"Buy\",\n        data: dataRecommend.buy,\n        backgroundColor: \"rgb(75, 192, 192)\",\n      },\n      {\n        label: \"Strong Buy\",\n        data: dataRecommend.strongBuy,\n        backgroundColor: \"rgb(0, 255, 0)\",\n      },\n    ],\n  };\n  return (\n    <div>\n      <Bar options={options} data={data}></Bar>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context/Context\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\n\nexport const IncomeStatement = () => {\n  const [context, setContext] = useContext(Context);\n  const [dataInfo, setDataInfo] = useState({\n    date: [\"\", \"\", \"\", \"\"],\n    symbol: [\"\", \"\", \"\", \"\"],\n    period: [\"\", \"\", \"\", \"\"],\n    costofgoodsandservicessold: [\"\", \"\", \"\", \"\"],\n    netincomeloss: [\"\", \"\", \"\", \"\"],\n    researchanddevelopmentexpense: [\"\", \"\", \"\", \"\"],\n    grossprofit: [\"\", \"\", \"\", \"\"],\n    othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax:\n      [\"\", \"\", \"\", \"\"],\n    othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax:\n      [\"\", \"\", \"\", \"\"],\n    othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax:\n      [\"\", \"\", \"\", \"\"],\n    weightedaveragenumberofdilutedsharesoutstanding: [\"\", \"\", \"\", \"\"],\n    weightedaveragenumberofsharesoutstandingbasic: [\"\", \"\", \"\", \"\"],\n    operatingincomeloss: [\"\", \"\", \"\", \"\"],\n    nonoperatingincomeexpense: [\"\", \"\", \"\", \"\"],\n    incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest:\n      [\"\", \"\", \"\", \"\"],\n    othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax: [\n      \"\",\n      \"\",\n      \"\",\n      \"\",\n    ],\n    earningspersharebasic: [\"\", \"\", \"\", \"\"],\n    incometaxexpensebenefit: [\"\", \"\", \"\", \"\"],\n    othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax:\n      [\"\", \"\", \"\", \"\"],\n    revenuefromcontractwithcustomerexcludingassessedtax: [\"\", \"\", \"\", \"\"],\n    earningspersharediluted: [\"\", \"\", \"\", \"\"],\n    operatingexpenses: [\"\", \"\", \"\", \"\"],\n    othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax:\n      [\"\", \"\", \"\", \"\"],\n    sellinggeneralandadministrativeexpense: [\"\", \"\", \"\", \"\"],\n    othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax:\n      [\"\", \"\", \"\", \"\"],\n    othercomprehensiveincomelossnetoftaxportionattributabletoparent: [\n      \"\",\n      \"\",\n      \"\",\n      \"\",\n    ],\n    comprehensiveincomenetoftax: [\"\", \"\", \"\", \"\"],\n  });\n  async function fetchCashFlow() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/income-statement-as-reported/${context}?limit=10&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    setDataInfo({\n      date: data\n        .map((date) => {\n          if (date.date === undefined) {\n            return (date.date = \"-\");\n          } else {\n            return date.date;\n          }\n        })\n        .slice(0, 4),\n      symbol: \"\",\n      period: \"\",\n      costofgoodsandservicessold: data\n        .map((date) => {\n          if (date.costofgoodsandservicessold === undefined) {\n            return (date.costofgoodsandservicessold = \"-\");\n          } else {\n            return date.costofgoodsandservicessold / 1000000;\n          }\n        })\n        .slice(0, 4),\n      netincomeloss: data\n        .map((date) => {\n          if (date.netincomeloss === undefined) {\n            return (date.netincomeloss = \"-\");\n          } else {\n            return date.netincomeloss / 1000000;\n          }\n        })\n        .slice(0, 4),\n      researchanddevelopmentexpense: data\n        .map((date) => {\n          if (date.researchanddevelopmentexpense === undefined) {\n            return (date.researchanddevelopmentexpenses = \"-\");\n          } else {\n            return date.researchanddevelopmentexpense / 1000000;\n          }\n        })\n        .slice(0, 4),\n      grossprofit: data\n        .map((date) => {\n          if (date.grossprofit === undefined) {\n            return (date.grossprofit = \"-\");\n          } else {\n            return date.grossprofit / 1000000;\n          }\n        })\n        .slice(0, 4),\n      othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax:\n        data\n          .map((date) => {\n            if (\n              date.othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax ===\n              undefined\n            ) {\n              return (date.othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax =\n                \"-\");\n            } else {\n              return (\n                date.othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax /\n                1000000\n              );\n            }\n          })\n          .slice(0, 4),\n      othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax:\n        data.map((date) => {\n          if (\n            date.othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax ===\n            undefined\n          ) {\n            return (date.othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax =\n              \"-\");\n          } else {\n            return (\n              date.othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax /\n              1000000\n            );\n          }\n        }),\n      othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax:\n        data\n          .map((date) => {\n            if (\n              date.othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax ===\n              undefined\n            ) {\n              return (date.othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax =\n                \"-\");\n            } else {\n              return (\n                date.othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax /\n                1000000\n              );\n            }\n          })\n          .slice(0, 4),\n      weightedaveragenumberofdilutedsharesoutstanding: data\n        .map((date) => {\n          if (\n            date.weightedaveragenumberofdilutedsharesoutstanding === undefined\n          ) {\n            return (date.weightedaveragenumberofdilutedsharesoutstanding = \"-\");\n          } else {\n            return (\n              date.weightedaveragenumberofdilutedsharesoutstanding / 1000000\n            );\n          }\n        })\n        .slice(0, 4),\n      weightedaveragenumberofsharesoutstandingbasic: data\n        .map((date) => {\n          if (\n            date.weightedaveragenumberofsharesoutstandingbasic === undefined\n          ) {\n            return (date.weightedaveragenumberofsharesoutstandingbasic = \"-\");\n          } else {\n            return date.weightedaveragenumberofsharesoutstandingbasic / 1000000;\n          }\n        })\n        .slice(0, 4),\n      operatingincomeloss: data\n        .map((date) => {\n          if (date.operatingincomeloss === undefined) {\n            return (date.operatingincomeloss = \"-\");\n          } else {\n            return date.operatingincomeloss / 1000000;\n          }\n        })\n        .slice(0, 4),\n      nonoperatingincomeexpense: data\n        .map((date) => {\n          if (date.nonoperatingincomeexpense === undefined) {\n            return (date.nonoperatingincomeexpense = \"-\");\n          } else {\n            return date.nonoperatingincomeexpense / 1000000;\n          }\n        })\n        .slice(0, 4),\n      incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest:\n        data\n          .map((date) => {\n            if (\n              date.incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest ===\n              undefined\n            ) {\n              return (date.incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest =\n                \"-\");\n            } else {\n              return (\n                date.incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest /\n                1000000\n              );\n            }\n          })\n          .slice(0, 4),\n      othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax:\n        data\n          .map((date) => {\n            if (\n              date.othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax ===\n              undefined\n            ) {\n              return (date.othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax =\n                \"-\");\n            } else {\n              return (\n                date.othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax /\n                1000000\n              );\n            }\n          })\n          .slice(0, 4),\n      earningspersharebasic: data\n        .map((date) => {\n          if (date.earningspersharebasic === undefined) {\n            return (date.earningspersharebasic = \"-\");\n          } else {\n            return date.earningspersharebasic;\n          }\n        })\n        .slice(0, 4),\n      incometaxexpensebenefit: data\n        .map((date) => {\n          if (date.incometaxexpensebenefit === undefined) {\n            return (date.incometaxexpensebenefit = \"-\");\n          } else {\n            return date.incometaxexpensebenefit / 1000000;\n          }\n        })\n        .slice(0, 4),\n      othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax:\n        data\n          .map((date) => {\n            if (\n              date.othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax ===\n              undefined\n            ) {\n              return (date.othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax =\n                \"-\");\n            } else {\n              return (\n                date.othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax /\n                1000000\n              );\n            }\n          })\n          .slice(0, 4),\n      revenuefromcontractwithcustomerexcludingassessedtax: data\n        .map((date) => {\n          if (\n            date.revenuefromcontractwithcustomerexcludingassessedtax ===\n            undefined\n          ) {\n            return (date.revenuefromcontractwithcustomerexcludingassessedtax =\n              \"-\");\n          } else {\n            return (\n              date.revenuefromcontractwithcustomerexcludingassessedtax / 1000000\n            );\n          }\n        })\n        .slice(0, 4),\n      earningspersharediluted: data\n        .map((date) => {\n          if (date.earningspersharediluted === undefined) {\n            return (date.earningspersharediluted = \"-\");\n          } else {\n            return date.earningspersharediluted;\n          }\n        })\n        .slice(0, 4),\n      operatingexpenses: data\n        .map((date) => {\n          if (date.operatingexpenses === undefined) {\n            return (date.operatingexpenses = \"-\");\n          } else {\n            return date.operatingexpenses / 1000000;\n          }\n        })\n        .slice(0, 4),\n      othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax:\n        data\n          .map((date) => {\n            if (\n              date.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax ===\n              undefined\n            ) {\n              return (date.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax =\n                \"-\");\n            } else {\n              return (\n                date.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax /\n                1000000\n              );\n            }\n          })\n          .slice(0, 4),\n      sellinggeneralandadministrativeexpense: data\n        .map((date) => {\n          if (date.sellinggeneralandadministrativeexpense === undefined) {\n            return (date.sellinggeneralandadministrativeexpense = \"-\");\n          } else {\n            return date.sellinggeneralandadministrativeexpense / 1000000;\n          }\n        })\n        .slice(0, 4),\n      othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax:\n        data\n          .map((date) => {\n            if (\n              date.othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax ===\n              undefined\n            ) {\n              return (date.othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax =\n                \"-\");\n            } else {\n              return (\n                date.othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax /\n                1000000\n              );\n            }\n          })\n          .slice(0, 4),\n      othercomprehensiveincomelossnetoftaxportionattributabletoparent: data\n        .map((date) => {\n          if (\n            date.othercomprehensiveincomelossnetoftaxportionattributabletoparent ===\n            undefined\n          ) {\n            return (date.othercomprehensiveincomelossnetoftaxportionattributabletoparent =\n              \"-\");\n          } else {\n            return (\n              date.othercomprehensiveincomelossnetoftaxportionattributabletoparent /\n              1000000\n            );\n          }\n        })\n        .slice(0, 4),\n      comprehensiveincomenetoftax: data\n        .map((date) => {\n          if (date.comprehensiveincomenetoftax === undefined) {\n            return (date.comprehensiveincomenetoftax = \"-\");\n          } else {\n            return date.comprehensiveincomenetoftax / 1000000;\n          }\n        })\n        .slice(0, 4),\n    });\n  }\n  useEffect(() => {\n    fetchCashFlow();\n  }, [context]);\n  console.log(\n    dataInfo.date,\n    dataInfo.othercomprehensiveincomelossnetoftaxportionattributabletoparent\n  );\n  return (\n    <div>\n      <h1> Income Statement </h1>\n      <h6> Numbers to Millions</h6>\n      <table id=\"simple-board\">\n        <tbody>\n          <tr>\n            <th>About</th>\n            {dataInfo.date.map((item) => (\n              <th>{item}</th>\n            ))}\n          </tr>\n          <tr>\n            <td> Cost of goods and services sold</td>\n            {dataInfo.costofgoodsandservicessold.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Income Loss</td>\n            {dataInfo.netincomeloss.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Research And Development Expense</td>\n            {dataInfo.researchanddevelopmentexpense.map((item) => (\n              <td> {item === \"\" ? \"N/A\" : item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Gross Profit </td>\n            {dataInfo.grossprofit.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Reclassification Adjustment From a\n              OCI for Sale of securities net of tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax.map(\n              (item) => (\n                <td> {item === NaN ? \"\" : item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Derivative Instrument Gain Loss\n              Before Reclassification After Tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax.map(\n              (item) => (\n                <td> {item == NaN ? \"\" : item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Foreign Currency Transaction And\n              Translation Adjustment Net of Tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Weighted Average Number Of Diluted Shares Outstanding</td>\n            {dataInfo.weightedaveragenumberofdilutedsharesoutstanding.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Weighted Average Number Of Shares Outstanding Basic</td>\n            {dataInfo.weightedaveragenumberofsharesoutstandingbasic.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Operating Income Loss</td>\n            {dataInfo.operatingincomeloss.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>Non-Operating Income Expense</td>\n            {dataInfo.nonoperatingincomeexpense.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>\n              Income Loss From Continuing Operations Before Income Taxes\n              Extraordinary Items Non-Controlling Interest\n            </td>\n            {dataInfo.incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Available For Sale Securities\n              Adjustment Net of Tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Earnings per Share Basic</td>\n            {dataInfo.earningspersharebasic.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>Income Tax Expense Benefit</td>\n            {dataInfo.incometaxexpensebenefit.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Unrealized Holding Gain Loss On\n              Securities a Rising During Period Net of Tax\n            </td>\n            {dataInfo.othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Revenue From Contract With Customer Excluding Assessed Tax</td>\n            {dataInfo.revenuefromcontractwithcustomerexcludingassessedtax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Earnings per Share Diluted</td>\n            {dataInfo.earningspersharediluted.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>Operating Expenses</td>\n            {dataInfo.operatingexpenses.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Derivative Instrument Gain Loss\n              After Reclassification And Tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Selling General And Admin Is Rative Expense</td>\n            {dataInfo.sellinggeneralandadministrativeexpense.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Derivative Instrument Gain Loss\n              Reclassification After Tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Net of Tax Portion Attributable to\n              Parent\n            </td>\n            {dataInfo.othercomprehensiveincomelossnetoftaxportionattributabletoparent.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Comprehensive Income Net of Tax</td>\n            {dataInfo.comprehensiveincomenetoftax.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"../css/App.css\";\nimport { BrowserRouter, Routes, Switch, Route, Link } from \"react-router-dom\";\n\nexport const BrowseFinancial = () => {\n  return (\n    <div>\n      <ul className=\"BrowserUl\">\n        <Link to=\"/cashflow\">\n          <li className=\"BrowserLi\"> CashFlow </li>\n        </Link>\n        <Link to=\"/incomestatement\">\n          <li className=\"BrowserLi\"> Income Statement </li>\n        </Link>\n\n        <Link to=\"/balancesheet\">\n          <li className=\"BrowserLi\"> Balance Sheet</li>\n        </Link>\n      </ul>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\n\nexport const BalanceSheet = () => {\n  const [context, setContext] = useContext(Context);\n  const [dataInfo, setDataInfo] = useState({\n    date: [],\n    liabilitiesandstockholdersequity: [],\n    liabilities: [],\n    liabilitiescurrent: [],\n    commonstocksharesauthorized: [],\n    cashandcashequivalentsatcarryingvalue: [],\n    retainedearningsaccumulateddeficit: [],\n    liabilitiesnoncurrent: [],\n    propertyplantandequipmentnet: [],\n    commonstocksincludingadditionalpaidincapital: [],\n    commercialpaper: [],\n    longtermdebtcurrent: [],\n    commonstocksharesoutstanding: [],\n    otherliabilitiesnoncurrent: [],\n    marketablesecuritiescurrent: [],\n    otherliabilitiescurrent: [],\n    assetscurrent: [],\n    longtermdebtnoncurrent: [],\n    contractwithcustomerliabilitycurrent: [],\n    nontradereceivablescurrent: [],\n    commonstocksharesissued: [],\n    stockholdersequity: [],\n    accountsreceivablenetcurrent: [],\n    accountspayablecurrent: [],\n    assets: [],\n    assetsnoncurrent: [],\n    otherassetscurrent: [],\n    otherassetsnoncurrent: [],\n    inventorynet: [],\n    marketablesecuritiesnoncurrent: [],\n    accumulatedothercomprehensiveincomelossnetoftax: [],\n  });\n  useEffect(() => {\n    fetchBalanceSheet();\n  }, [context]);\n\n  async function fetchBalanceSheet() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/balance-sheet-statement-as-reported/${context}?limit=10&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    setDataInfo({\n      date: data\n        .map((date) => {\n          if (date.date === undefined) {\n            return (date.date = \"-\");\n          } else {\n            return date.date;\n          }\n        })\n        .slice(0, 4),\n      liabilitiesandstockholdersequity: data\n        .map((date) => {\n          if (date.liabilitiesandstockholdersequity === undefined) {\n            return (date.liabilitiesandstockholdersequity = \"-\");\n          } else {\n            return date.liabilitiesandstockholdersequity / 1000000;\n          }\n        })\n        .slice(0, 4),\n      liabilities: data\n        .map((date) => {\n          if (date.liabilities === undefined) {\n            return (date.liabilities = \"-\");\n          } else {\n            return date.liabilities / 1000000;\n          }\n        })\n        .slice(0, 4),\n      liabilitiescurrent: data\n        .map((date) => {\n          if (date.liabilitiescurrent === undefined) {\n            return (date.liabilitiescurrent = \"-\");\n          } else {\n            return date.liabilitiescurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      commonstocksharesauthorized: data\n        .map((date) => {\n          if (date.commonstocksharesauthorized === undefined) {\n            return (date.commonstocksharesauthorized = \"-\");\n          } else {\n            return date.commonstocksharesauthorized / 1000000;\n          }\n        })\n        .slice(0, 4),\n      cashandcashequivalentsatcarryingvalue: data\n        .map((date) => {\n          if (date.cashandcashequivalentsatcarryingvalue === undefined) {\n            return (date.cashandcashequivalentsatcarryingvalue = \"-\");\n          } else {\n            return date.cashandcashequivalentsatcarryingvalue / 1000000;\n          }\n        })\n        .slice(0, 4),\n      retainedearningsaccumulateddeficit: data\n        .map((date) => {\n          if (date.retainedearningsaccumulateddeficit === undefined) {\n            return (date.retainedearningsaccumulateddeficit = \"-\");\n          } else {\n            return date.retainedearningsaccumulateddeficit / 1000000;\n          }\n        })\n        .slice(0, 4),\n      liabilitiesnoncurrent: data\n        .map((date) => {\n          if (date.liabilitiesnoncurrent === undefined) {\n            return (date.liabilitiesnoncurrent = \"-\");\n          } else {\n            return date.liabilitiesnoncurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      propertyplantandequipmentnet: data\n        .map((date) => {\n          if (date.propertyplantandequipmentnet === undefined) {\n            return (date.propertyplantandequipmentnet = \"-\");\n          } else {\n            return date.propertyplantandequipmentnet / 1000000;\n          }\n        })\n        .slice(0, 4),\n      commonstocksincludingadditionalpaidincapital: data\n        .map((date) => {\n          if (date.commonstocksincludingadditionalpaidincapital === undefined) {\n            return (date.commonstocksincludingadditionalpaidincapital = \"-\");\n          } else {\n            return date.commonstocksincludingadditionalpaidincapital / 1000000;\n          }\n        })\n        .slice(0, 4),\n      commercialpaper: data\n        .map((date) => {\n          if (date.commercialpaper === undefined) {\n            return (date.commercialpaper = \"-\");\n          } else {\n            return date.commercialpaper / 1000000;\n          }\n        })\n        .slice(0, 4),\n      longtermdebtcurrent: data\n        .map((date) => {\n          if (date.longtermdebtcurrent === undefined) {\n            return (date.longtermdebtcurrent = \"-\");\n          } else {\n            return date.longtermdebtcurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      commonstocksharesoutstanding: data\n        .map((date) => {\n          if (date.commonstocksharesoutstanding === undefined) {\n            return (date.commonstocksharesoutstanding = \"-\");\n          } else {\n            return date.commonstocksharesoutstanding / 1000000;\n          }\n        })\n        .slice(0, 4),\n      otherliabilitiesnoncurrent: data\n        .map((date) => {\n          if (date.otherliabilitiesnoncurrent === undefined) {\n            return (date.otherliabilitiesnoncurrent = \"-\");\n          } else {\n            return date.otherliabilitiesnoncurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      marketablesecuritiescurrent: data\n        .map((date) => {\n          if (date.marketablesecuritiescurrent === undefined) {\n            return (date.marketablesecuritiescurrent = \"-\");\n          } else {\n            return date.marketablesecuritiescurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      otherliabilitiescurrent: data\n        .map((date) => {\n          if (date.otherliabilitiescurrent === undefined) {\n            return (date.otherliabilitiescurrent = \"-\");\n          } else {\n            return date.otherliabilitiescurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      assetscurrent: data\n        .map((date) => {\n          if (date.assetscurrent === undefined) {\n            return (date.assetscurrent = \"-\");\n          } else {\n            return date.assetscurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      longtermdebtnoncurrent: data\n        .map((date) => {\n          if (date.longtermdebtnoncurren === undefined) {\n            return (date.longtermdebtnoncurren = \"-\");\n          } else {\n            return date.longtermdebtnoncurren / 1000000;\n          }\n        })\n        .slice(0, 4),\n      contractwithcustomerliabilitycurrent: data\n        .map((date) => {\n          if (date.contractwithcustomerliabilitycurrent === undefined) {\n            return (date.contractwithcustomerliabilitycurrent = \"-\");\n          } else {\n            return date.contractwithcustomerliabilitycurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      nontradereceivablescurrent: data\n        .map((date) => {\n          if (date.nontradereceivablescurrent === undefined) {\n            return (date.nontradereceivablescurrent = \"-\");\n          } else {\n            return date.nontradereceivablescurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      commonstocksharesissued: data\n        .map((date) => {\n          if (date.commonstocksharesissued === undefined) {\n            return (date.commonstocksharesissued = \"-\");\n          } else {\n            return date.commonstocksharesissued / 1000000;\n          }\n        })\n        .slice(0, 4),\n      stockholdersequity: data\n        .map((date) => {\n          if (date.stockholdersequity === undefined) {\n            return (date.stockholdersequity = \"-\");\n          } else {\n            return date.stockholdersequity / 1000000;\n          }\n        })\n        .slice(0, 4),\n      accountsreceivablenetcurrent: data\n        .map((date) => {\n          if (date.accountsreceivablenetcurrent === undefined) {\n            return (date.accountsreceivablenetcurrent = \"-\");\n          } else {\n            return date.accountsreceivablenetcurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      accountspayablecurrent: data\n        .map((date) => {\n          if (date.accountspayablecurrent === undefined) {\n            return (date.accountspayablecurrent = \"-\");\n          } else {\n            return date.accountspayablecurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      assets: data\n        .map((date) => {\n          if (date.assets === undefined) {\n            return (date.assets = \"-\");\n          } else {\n            return date.assets / 1000000;\n          }\n        })\n        .slice(0, 4),\n      assetsnoncurrent: data\n        .map((date) => {\n          if (date.assetsnoncurrent === undefined) {\n            return (date.assetsnoncurrent = \"-\");\n          } else {\n            return date.assetsnoncurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      otherassetscurrent: data\n        .map((date) => {\n          if (date.otherassetscurrent === undefined) {\n            return (date.otherassetscurrent = \"-\");\n          } else {\n            return date.otherassetscurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      otherassetsnoncurrent: data\n        .map((date) => {\n          if (date.otherassetsnoncurrent === undefined) {\n            return (date.otherassetsnoncurrent = \"-\");\n          } else {\n            return date.otherassetsnoncurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      inventorynet: data\n        .map((date) => {\n          if (date.inventorynet === undefined) {\n            return (date.inventorynet = \"-\");\n          } else {\n            return date.inventorynet / 1000000;\n          }\n        })\n        .slice(0, 4),\n      marketablesecuritiesnoncurrent: data\n        .map((date) => {\n          if (date.marketablesecuritiesnoncurrent === undefined) {\n            return (date.marketablesecuritiesnoncurrent = \"-\");\n          } else {\n            return date.marketablesecuritiesnoncurrent / 1000000;\n          }\n        })\n        .slice(0, 4),\n      accumulatedothercomprehensiveincomelossnetoftax: data\n        .map((date) => {\n          if (\n            date.accumulatedothercomprehensiveincomelossnetoftax === undefined\n          ) {\n            return (date.accumulatedothercomprehensiveincomelossnetoftax = \"-\");\n          } else {\n            return (\n              date.accumulatedothercomprehensiveincomelossnetoftax / 1000000\n            );\n          }\n        })\n        .slice(0, 4),\n    });\n  }\n  return (\n    <div>\n      <h1> Balance Sheet</h1>\n      <table>\n        <tbody>\n          <tr>\n            <th>About</th>\n            {dataInfo.date.map((item) => (\n              <th>{item}</th>\n            ))}\n          </tr>\n          <tr>\n            <td> Liabilities and Stockholders Equity</td>\n            {dataInfo.liabilitiesandstockholdersequity.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Liabilities</td>\n            {dataInfo.liabilities.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Liabilities Current</td>\n            {dataInfo.liabilitiescurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common Stock Shares Authorized</td>\n            {dataInfo.commonstocksharesauthorized.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Cash and Cash Equivalents at carry ingvalue</td>\n            {dataInfo.cashandcashequivalentsatcarryingvalue.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Retained earnings accumulated deficit</td>\n            {dataInfo.retainedearningsaccumulateddeficit.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Liabilities non-current</td>\n            {dataInfo.liabilitiesnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Cost of goods and services sold</td>\n            {dataInfo.liabilitiesnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Property Plant and Equipment Net</td>\n            {dataInfo.propertyplantandequipmentnet.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common stocks Including additional paid in capital</td>\n            {dataInfo.commonstocksincludingadditionalpaidincapital.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td> Long Term Debt Current </td>\n            {dataInfo.longtermdebtcurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common Stock Shares Outstanding </td>\n            {dataInfo.commonstocksharesoutstanding.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Liabilities Non-current </td>\n            {dataInfo.otherliabilitiesnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Marketable Securities Current </td>\n            {dataInfo.marketablesecuritiescurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Liabilities Current </td>\n            {dataInfo.otherliabilitiescurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Assets Current </td>\n            {dataInfo.assetscurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Long Term Debt Non-Current </td>\n            {dataInfo.longtermdebtnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Contract with Customer Liability Current </td>\n            {dataInfo.contractwithcustomerliabilitycurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Non-Trade Receivables Current </td>\n            {dataInfo.nontradereceivablescurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common Stock Shares Issued </td>\n            {dataInfo.commonstocksharesissued.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Stock Holders Equity </td>\n            {dataInfo.stockholdersequity.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Accounts Receivable Net Current </td>\n            {dataInfo.accountsreceivablenetcurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Accounts Payable Current </td>\n            {dataInfo.accountspayablecurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Assets </td>\n            {dataInfo.assets.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Assets Non-Current </td>\n            {dataInfo.assetsnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Assets Non-Current </td>\n            {dataInfo.otherassetsnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Inventory Net </td>\n            {dataInfo.inventorynet.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Marketable Securities Non-Current </td>\n            {dataInfo.marketablesecuritiesnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Accumulated Other Comprehensive Income Loss Net of Tax </td>\n            {dataInfo.accumulatedothercomprehensiveincomelossnetoftax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td> Other Assets Current </td>\n            {dataInfo.otherassetscurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\nexport const CashFlow = () => {\n  const [context, setContext] = useContext(Context);\n  const [dataInfo, setDataInfo] = useState({\n    date: [],\n    netIncome: [],\n    netincomeloss: [],\n    depreciationAndAmortization: [],\n    deferredIncomeTax: [],\n    stockBasedCompensation: [],\n    changeInWorkingCapital: [],\n    accountsReceivables: [],\n    inventory: [],\n    accountsPayables: [],\n    otherWorkingCapital: [],\n    otherNonCashItems: [],\n    netCashProvidedByOperatingActivities: [],\n    investmentsInPropertyPlantAndEquipment: [],\n    acquisitionsNet: [],\n    purchasesOfInvestments: [],\n    salesMaturitiesOfInvestments: [],\n    otherInvestingActivites: [],\n    netCashUsedForInvestingActivites: [],\n    debtRepayment: [],\n    commonStockIssued: [],\n    commonStockRepurchased: [],\n    dividendsPaid: [],\n    otherFinancingActivites: [],\n    netCashUsedProvidedByFinancingActivities: [],\n    effectOfForexChangesOnCash: [],\n    netChangeInCash: [],\n    cashAtEndOfPeriod: [],\n    cashAtBeginningOfPeriod: [],\n    operatingCashFlow: [],\n    capitalExpenditure: [],\n    freeCashFlow: [],\n  });\n\n  async function fetchIncomeStatement() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/cash-flow-statement/${context}?limit=120&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    setDataInfo({\n      date: data\n        .map((date) => {\n          if (date.date === undefined) {\n            return (date.date = \"-\");\n          } else {\n            return date.date;\n          }\n        })\n        .slice(0, 4),\n      netIncome: data\n        .map((date) => {\n          if (date.netIncome === undefined) {\n            return (date.netIncome = \"-\");\n          } else {\n            return date.netIncome / 1000000;\n          }\n        })\n        .slice(0, 4),\n      netincomeloss: data\n        .map((date) => {\n          if (date.netincomeloss === undefined) {\n            return (date.netincomeloss = \"-\");\n          } else {\n            return date.netincomeloss / 1000000;\n          }\n        })\n        .slice(0, 4),\n      depreciationAndAmortization: data\n        .map((date) => {\n          if (date.depreciationAndAmortization === undefined) {\n            return (date.depreciationAndAmortization = \"-\");\n          } else {\n            return date.depreciationAndAmortization / 1000000;\n          }\n        })\n        .slice(0, 4),\n      deferredIncomeTax: data\n        .map((date) => {\n          if (date.deferredIncomeTax === undefined) {\n            return (date.deferredIncomeTax = \"-\");\n          } else {\n            return date.deferredIncomeTax / 1000000;\n          }\n        })\n        .slice(0, 4),\n      stockBasedCompensation: data\n        .map((date) => {\n          if (date.stockBasedCompensation === undefined) {\n            return (date.stockBasedCompensation = \"-\");\n          } else {\n            return date.stockBasedCompensation / 1000000;\n          }\n        })\n        .slice(0, 4),\n      changeInWorkingCapital: data\n        .map((date) => {\n          if (date.changeInWorkingCapital === undefined) {\n            return (date.changeInWorkingCapital = \"-\");\n          } else {\n            return date.changeInWorkingCapital / 1000000;\n          }\n        })\n        .slice(0, 4),\n      accountsReceivables: data\n        .map((date) => {\n          if (date.accountsReceivables === undefined) {\n            return (date.accountsReceivables = \"-\");\n          } else {\n            return date.accountsReceivables / 1000000;\n          }\n        })\n        .slice(0, 4),\n      inventory: data\n        .map((date) => {\n          if (date.inventory === undefined) {\n            return (date.inventory = \"-\");\n          } else {\n            return date.inventory / 1000000;\n          }\n        })\n        .slice(0, 4),\n      accountsPayables: data\n        .map((date) => {\n          if (date.accountsPayables === undefined) {\n            return (date.accountsPayables = \"-\");\n          } else {\n            return date.accountsPayables / 1000000;\n          }\n        })\n        .slice(0, 4),\n      otherWorkingCapital: data\n        .map((date) => {\n          if (date.otherWorkingCapital === undefined) {\n            return (date.otherWorkingCapital = \"-\");\n          } else {\n            return date.otherWorkingCapital / 1000000;\n          }\n        })\n        .slice(0, 4),\n      otherNonCashItems: data\n        .map((date) => {\n          if (date.otherNonCashItems === undefined) {\n            return (date.otherNonCashItems = \"-\");\n          } else {\n            return date.otherNonCashItems / 1000000;\n          }\n        })\n        .slice(0, 4),\n      netCashProvidedByOperatingActivities: data\n        .map((date) => {\n          if (date.netCashProvidedByOperatingActivities === undefined) {\n            return (date.netCashProvidedByOperatingActivities = \"-\");\n          } else {\n            return date.netCashProvidedByOperatingActivities / 1000000;\n          }\n        })\n        .slice(0, 4),\n      investmentsInPropertyPlantAndEquipment: data\n        .map((date) => {\n          if (date.investmentsInPropertyPlantAndEquipment === undefined) {\n            return (date.investmentsInPropertyPlantAndEquipment = \"-\");\n          } else {\n            return date.investmentsInPropertyPlantAndEquipment / 1000000;\n          }\n        })\n        .slice(0, 4),\n      acquisitionsNet: data\n        .map((date) => {\n          if (date.acquisitionsNet === undefined) {\n            return (date.acquisitionsNet = \"-\");\n          } else {\n            return date.acquisitionsNet / 1000000;\n          }\n        })\n        .slice(0, 4),\n      purchasesOfInvestments: data\n        .map((date) => {\n          if (date.purchasesOfInvestments === undefined) {\n            return (date.purchasesOfInvestments = \"-\");\n          } else {\n            return date.purchasesOfInvestments / 1000000;\n          }\n        })\n        .slice(0, 4),\n      salesMaturitiesOfInvestments: data\n        .map((date) => {\n          if (date.salesMaturitiesOfInvestments === undefined) {\n            return (date.salesMaturitiesOfInvestments = \"-\");\n          } else {\n            return date.salesMaturitiesOfInvestments / 1000000;\n          }\n        })\n        .slice(0, 4),\n      otherInvestingActivites: data\n        .map((date) => {\n          if (date.otherInvestingActivites === undefined) {\n            return (date.otherInvestingActivites = \"-\");\n          } else {\n            return date.otherInvestingActivites / 1000000;\n          }\n        })\n        .slice(0, 4),\n      netCashUsedForInvestingActivites: data\n        .map((date) => {\n          if (date.netCashUsedForInvestingActivites === undefined) {\n            return (date.netCashUsedForInvestingActivites = \"-\");\n          } else {\n            return date.netCashUsedForInvestingActivites / 1000000;\n          }\n        })\n        .slice(0, 4),\n      debtRepayment: data\n        .map((date) => {\n          if (date.debtRepayment === undefined) {\n            return (date.debtRepayment = \"-\");\n          } else {\n            return date.debtRepayment / 1000000;\n          }\n        })\n        .slice(0, 4),\n      commonStockIssued: data\n        .map((date) => {\n          if (date.commonStockIssued === undefined) {\n            return (date.commonStockIssued = \"-\");\n          } else {\n            return date.commonStockIssued / 1000000;\n          }\n        })\n        .slice(0, 4),\n      commonStockRepurchased: data\n        .map((date) => {\n          if (date.commonStockRepurchased === undefined) {\n            return (date.commonStockRepurchased = \"-\");\n          } else {\n            return date.commonStockRepurchased / 1000000;\n          }\n        })\n        .slice(0, 4),\n      dividendsPaid: data\n        .map((date) => {\n          if (date.dividendsPaid === undefined) {\n            return (date.dividendsPaid = \"-\");\n          } else {\n            return date.dividendsPaid / 1000000;\n          }\n        })\n        .slice(0, 4),\n      otherFinancingActivites: data\n        .map((date) => {\n          if (date.otherFinancingActivites === undefined) {\n            return (date.otherFinancingActivites = \"-\");\n          } else {\n            return date.otherFinancingActivites / 1000000;\n          }\n        })\n        .slice(0, 4),\n      netCashUsedProvidedByFinancingActivities: data\n        .map((date) => {\n          if (date.netCashUsedProvidedByFinancingActivities === undefined) {\n            return (date.netCashUsedProvidedByFinancingActivities = \"-\");\n          } else {\n            return date.netCashUsedProvidedByFinancingActivities / 1000000;\n          }\n        })\n        .slice(0, 4),\n      effectOfForexChangesOnCash: data\n        .map((date) => {\n          if (date.effectOfForexChangesOnCash === undefined) {\n            return (date.effectOfForexChangesOnCash = \"-\");\n          } else {\n            return date.effectOfForexChangesOnCash / 1000000;\n          }\n        })\n        .slice(0, 4),\n      netChangeInCash: data\n        .map((date) => {\n          if (date.netChangeInCash === undefined) {\n            return (date.netChangeInCash = \"-\");\n          } else {\n            return date.netChangeInCash / 1000000;\n          }\n        })\n        .slice(0, 4),\n      cashAtEndOfPeriod: data\n        .map((date) => {\n          if (date.cashAtEndOfPeriod === undefined) {\n            return (date.cashAtEndOfPeriod = \"-\");\n          } else {\n            return date.cashAtEndOfPeriod / 1000000;\n          }\n        })\n        .slice(0, 4),\n      cashAtBeginningOfPeriod: data\n        .map((date) => {\n          if (date.cashAtBeginningOfPeriod === undefined) {\n            return (date.cashAtBeginningOfPeriod = \"-\");\n          } else {\n            return date.cashAtBeginningOfPeriod / 1000000;\n          }\n        })\n        .slice(0, 4),\n      operatingCashFlow: data\n        .map((date) => {\n          if (date.operatingCashFlow === undefined) {\n            return (date.operatingCashFlow = \"-\");\n          } else {\n            return date.operatingCashFlow / 1000000;\n          }\n        })\n        .slice(0, 4),\n      capitalExpenditure: data\n        .map((date) => {\n          if (date.capitalExpenditure === undefined) {\n            return (date.capitalExpenditure = \"-\");\n          } else {\n            return date.capitalExpenditure / 1000000;\n          }\n        })\n        .slice(0, 4),\n      freeCashFlow: data\n        .map((date) => {\n          if (date.freeCashFlow === undefined) {\n            return (date.freeCashFlow = \"-\");\n          } else {\n            return date.freeCashFlow / 1000000;\n          }\n        })\n        .slice(0, 4),\n    });\n  }\n  useEffect(() => {\n    fetchIncomeStatement();\n  }, [context]);\n  return (\n    <div>\n      <h1> Income Statement</h1>\n      <h6> Numbers to Millions</h6>\n      <table>\n        <tbody>\n          <tr>\n            <th>About</th>\n            {dataInfo.date.map((item) => (\n              <th>{item}</th>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Income</td>\n            {dataInfo.netIncome.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Depreciation and Amortization</td>\n            {dataInfo.depreciationAndAmortization.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Deferred Income Tax</td>\n            {dataInfo.deferredIncomeTax.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Stock Based Compensation</td>\n            {dataInfo.stockBasedCompensation.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Change In Working Capital</td>\n            {dataInfo.changeInWorkingCapital.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Accounts Receivables</td>\n            {dataInfo.accountsReceivables.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Inventory</td>\n            {dataInfo.inventory.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Accounts Payables</td>\n            {dataInfo.accountsPayables.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Working Capital</td>\n            {dataInfo.otherWorkingCapital.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Non-Cash Items</td>\n            {dataInfo.otherNonCashItems.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Cash Provided By Operating Activities</td>\n            {dataInfo.netCashProvidedByOperatingActivities.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Investments In Property Plant And Equipment</td>\n            {dataInfo.investmentsInPropertyPlantAndEquipment.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Acquisitions Net</td>\n            {dataInfo.acquisitionsNet.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Purchases Of Investments</td>\n            {dataInfo.purchasesOfInvestments.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Sales Maturities Of Investments</td>\n            {dataInfo.salesMaturitiesOfInvestments.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Investing Activites</td>\n            {dataInfo.otherInvestingActivites.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Cash Used For Investing Activites</td>\n            {dataInfo.netCashUsedForInvestingActivites.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Debt Repayment</td>\n            {dataInfo.debtRepayment.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common Stock Issued</td>\n            {dataInfo.commonStockIssued.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common Stock Repurchased</td>\n            {dataInfo.commonStockRepurchased.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Dividends Paid</td>\n            {dataInfo.dividendsPaid.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Financing Activites</td>\n            {dataInfo.otherFinancingActivites.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Cash Used Provided By Financing Activities</td>\n            {dataInfo.otherFinancingActivites.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Effect Of Forex Changes On Cash</td>\n            {dataInfo.effectOfForexChangesOnCash.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Change In Cash</td>\n            {dataInfo.netChangeInCash.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Cash At End Of Period</td>\n            {dataInfo.cashAtEndOfPeriod.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Cash At Beginning Of Period</td>\n            {dataInfo.cashAtBeginningOfPeriod.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Operating Cash Flow</td>\n            {dataInfo.operatingCashFlow.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Capital Expenditure</td>\n            {dataInfo.capitalExpenditure.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Free Cash Flow</td>\n            {dataInfo.freeCashFlow.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Routes, Switch, Route, Link } from \"react-router-dom\";\nimport { BrowseFinancial } from \"../NavBar/BrowseFinancial\";\nimport { BalanceSheet } from \"./BalanceSheet\";\nimport { IncomeStatement } from \"./IncomeStatement\";\nimport { CashFlow } from \"./CashFlow\";\n\nexport const BrowseBar = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <BrowseFinancial />\n        <Routes>\n          <Route path=\"/cashflow\" element={<CashFlow />} />\n          <Route path=\"/incomestatement\" element={<IncomeStatement />} />\n          <Route path=\"/balancesheet\" element={<BalanceSheet />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./css/App.css\";\nimport InputForm from \"./InputForm/InputForm\";\nimport StockScreener from \"./StockScreener/StockScreener\";\nimport NavBar from \"./NavBar/NavBar\";\nimport News from \"../src/News/News\";\nimport ChartLine from \"./Charts/ChartLine\";\nimport { Context } from \"./Context/Context\";\nimport { RevenueEarning } from \"./Charts/RevenueEarning\";\nimport { Recommendation } from \"./Financials/Recommendation\";\nimport { CashFlow } from \"./Financials/IncomeStatement\";\nimport { BrowseBar } from \"./Financials/BrowseBar\";\nimport { BrowseFinancial } from \"./NavBar/BrowseFinancial\";\nfunction App() {\n  const [context, setContext] = useState(\"AAPL\");\n  return (\n    <div className=\"App\">\n      <Context.Provider value={[context, setContext]}>\n        <InputForm></InputForm>\n        {/* <StockScreener></StockScreener> */}\n        <BrowseBar></BrowseBar>\n        {/* <NavBar></NavBar> */}\n        {/* <News></News> */}\n        <ChartLine></ChartLine>\n        <RevenueEarning></RevenueEarning>\n        <Recommendation></Recommendation>\n      </Context.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}