{"version":3,"sources":["apikey/apikey.js","News/News.js","Context/Context.js","Financials/BasicInfo.js","Charts/ChartLine.js","Charts/RevenueEarning.js","Financials/BalanceSheet.js","Financials/IncomeStatement.js","NavBar/NavBar.js","Banner/Banner.js","Search/Search.js","Financials/StocksNavBar.js","Financials/Stocks.js","Financials/CashFlow.js","News/StockNews.js","Financials/Ratios.js","Router/RoutesComponent.js","App.js","index.js"],"names":["financialmodelingprepApikey","finnhubApikey","News","props","_useState","useState","category","headline","image","source","summary","url","_useState2","Object","slicedToArray","news","setNews","_useState3","_useState4","spinner","setSpinner","_fetchNews","asyncToGenerator","regenerator_default","a","mark","_callee","res","data","news1","news2","news3","news4","_ref","wrap","_context","prev","next","fetch","concat","sent","json","stop","apply","this","arguments","useEffect","fetchNews","react_default","createElement","Fragment","className","ClipLoader_default","style","marginTop","marginLeft","href","color","src","width","height","textAlign","Context","React","createContext","BasicInfo","_useContext","useContext","context","open","current","change","high","low","previousClose","price","setPrice","_fetchOcPrice","o","toFixed","c","dp","h","l","pc","fetchOcPrice","console","log","ChartLine","_useContext2","info","setInfo","_useState5","_useState6","date","setDate","_fetchChartMonth","HistoricalData","historical","t0","stockPrice","slice","reverse","map","close","stockDate","abrupt","fetchChartMonth","id","name","onChange","e","target","value","index_modern","labels","datasets","label","fill","borderColor","tension","options","plugins","zoom","wheel","enabled","mode","speed","modifierKey","pan","threshold","pinch","BasicInfo_BasicInfo","Chart","register","zoomPlugin","RevenueEarning","revenue","fetchData","setFetchData","_fetchRevenueEarningYear","element","fetchRevenueEarningYear","backgroundColor","responsive","divider","checkNumbers","attribute","constant","undefined","Number","BalanceSheet","liabilitiesandstockholdersequity","liabilities","liabilitiescurrent","commonstocksharesauthorized","cashandcashequivalentsatcarryingvalue","retainedearningsaccumulateddeficit","liabilitiesnoncurrent","propertyplantandequipmentnet","commonstocksincludingadditionalpaidincapital","commercialpaper","longtermdebtcurrent","commonstocksharesoutstanding","otherliabilitiesnoncurrent","marketablesecuritiescurrent","otherliabilitiescurrent","assetscurrent","longtermdebtnoncurrent","contractwithcustomerliabilitycurrent","nontradereceivablescurrent","commonstocksharesissued","stockholdersequity","accountsreceivablenetcurrent","accountspayablecurrent","assets","assetsnoncurrent","otherassetscurrent","otherassetsnoncurrent","inventorynet","marketablesecuritiesnoncurrent","accumulatedothercomprehensiveincomelossnetoftax","dataInfo","setDataInfo","_fetchBalanceSheet","fetchBalanceSheet","item","IncomeStatement","costofgoodsandservicessold","netincomeloss","researchanddevelopmentexpense","grossprofit","othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax","othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax","othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax","weightedaveragenumberofdilutedsharesoutstanding","weightedaveragenumberofsharesoutstandingbasic","operatingincomeloss","nonoperatingincomeexpense","incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest","othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax","earningspersharebasic","incometaxexpensebenefit","othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax","revenuefromcontractwithcustomerexcludingassessedtax","earningspersharediluted","operatingexpenses","othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax","sellinggeneralandadministrativeexpense","othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax","othercomprehensiveincomelossnetoftaxportionattributabletoparent","comprehensiveincomenetoftax","_fetchCashFlow","fetchCashFlow","NaN","NavBar","react_router_dom","to","Banner","Search","setValue","setContext","maxLength","required","autoFocus","placeholder","type","borderWidth","outline","toUpperCase","borderStyle","onClick","index_es","icon","faSearch","StocksNavBar","react_router","Stocks","Search_Search","StocksNavBar_StocksNavBar","CashFlow","netIncome","depreciationAndAmortization","deferredIncomeTax","stockBasedCompensation","changeInWorkingCapital","accountsReceivables","inventory","accountsPayables","otherWorkingCapital","otherNonCashItems","netCashProvidedByOperatingActivities","investmentsInPropertyPlantAndEquipment","acquisitionsNet","purchasesOfInvestments","salesMaturitiesOfInvestments","otherInvestingActivites","netCashUsedForInvestingActivites","debtRepayment","commonStockIssued","commonStockRepurchased","dividendsPaid","otherFinancingActivites","netCashUsedProvidedByFinancingActivities","effectOfForexChangesOnCash","netChangeInCash","cashAtEndOfPeriod","cashAtBeginningOfPeriod","operatingCashFlow","capitalExpenditure","freeCashFlow","_fetchIncomeStatement","fetchIncomeStatement","key","StockNews","_fetchStockNews","headline1","headline2","headline3","headline4","image1","image2","image3","image4","summary1","summary2","summary3","summary4","fetchStockNews","margin","Ratio","dividendYielTTM","dividendYielPercentageTTM","peRatioTTM","pegRatioTTM","payoutRatioTTM","currentRatioTTM","quickRatioTTM","cashRatioTTM","daysOfSalesOutstandingTTM","daysOfInventoryOutstandingTTM","operatingCycleTTM","daysOfPayablesOutstandingTTM","cashConversionCycleTTM","grossProfitMarginTTM","operatingProfitMarginTTM","pretaxProfitMarginTTM","netProfitMarginTTM","effectiveTaxRateTTM","returnOnAssetsTTM","returnOnEquityTTM","returnOnCapitalEmployedTTM","netIncomePerEBTTTM","ebtPerEbitTTM","ebitPerRevenueTTM","debtRatioTTM","debtEquityRatioTTM","longTermDebtToCapitalizationTTM","totalDebtToCapitalizationTTM","interestCoverageTTM","cashFlowToDebtRatioTTM","companyEquityMultiplierTTM","receivablesTurnoverTTM","payablesTurnoverTTM","inventoryTurnoverTTM","fixedAssetTurnoverTTM","assetTurnoverTTM","operatingCashFlowPerShareTTM","freeCashFlowPerShareTTM","cashPerShareTTM","operatingCashFlowSalesRatioTTM","freeCashFlowOperatingCashFlowRatioTTM","cashFlowCoverageRatiosTTM","shortTermCoverageRatiosTTM","capitalExpenditureCoverageRatioTTM","dividendPaidAndCapexCoverageRatioTTM","priceBookValueRatioTTM","priceToBookRatioTTM","priceToSalesRatioTTM","priceEarningsRatioTTM","priceToFreeCashFlowsRatioTTM","priceToOperatingCashFlowsRatioTTM","priceCashFlowRatioTTM","priceEarningsToGrowthRatioTTM","priceSalesRatioTTM","dividendYieldTTM","enterpriseValueMultipleTTM","priceFairValueTTM","dividendPerShareTTM","ratio","setRatio","_fetchRatio","fetchRatio","RoutesComponent","exact","path","Stocks_Stocks","StockNews_StockNews","CashFlow_CashFlow","IncomeStatement_IncomeStatement","BalanceSheet_BalanceSheet","RevenueEarning_RevenueEarning","Ratios_Ratio","App","Provider","Banner_Banner","NavBar_NavBar","RoutesComponent_RoutesComponent","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.794d360c.chunk.js","sourcesContent":["export const financialmodelingprepApikey = \"27e30c366f6b2d5ccd0915478fe5bd68\";\nexport const finnhubApikey = \"c7eaef2ad3ifpe0p8dkg\";\nexport const alphavantage = \"5IFEHJ4BEBK4FA78\";\n","// A Component that displays news about the market\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { finnhubApikey } from \"../apikey/apikey\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport default function News(props) {\n  const [news, setNews] = useState({\n    category: \"\",\n    headline: \"\",\n    image: \"\",\n    source: \"\",\n    summary: \"\",\n    url: \"\",\n  });\n  const [spinner, setSpinner] = useState(true);\n  async function fetchNews() {\n    const res = await fetch(\n      `https://finnhub.io/api/v1/news?category=general&token=${finnhubApikey}`\n    );\n    const data = await res.json();\n    setSpinner(false);\n    let news1, news2, news3, news4;\n    [news1, news2, news3, news4] = [data[0], data[1], data[2], data[3]];\n\n    setNews({\n      category: {\n        news1: news1.category,\n        news2: news2.category,\n        news3: news3.category,\n        news4: news4.category,\n      },\n      headline: {\n        news1: news1.headline,\n        news2: news2.headline,\n        news3: news3.headline,\n        news4: news4.headline,\n      },\n      image: {\n        news1: news1.image,\n        news2: news2.image,\n        news3: news3.image,\n        news4: news4.image,\n      },\n      source: {\n        news1: news1.source,\n        news2: news2.source,\n        news3: news3.source,\n        news4: news4.source,\n      },\n      summary: {\n        news1: news1.summary,\n        news2: news2.summary,\n        news3: news3.summary,\n        news4: news4.summary,\n      },\n      url: {\n        news1: news1.url,\n        news2: news2.url,\n        news3: news3.url,\n        news4: news4.url,\n      },\n    });\n  }\n  useEffect(() => {\n    fetchNews();\n  }, []);\n\n  return (\n    <>\n      <div className=\"Financial\">\n        {spinner ? (\n          <ClipLoader />\n        ) : (\n          <div>\n            <div style={{ marginTop: \"50px\", marginLeft: \"100px\" }}>\n              {\" \"}\n              {news.headline.news1}\n              <div>\n                <a href={news.url.news1}></a>\n                {news.source.news1}\n              </div>\n              <div style={{ marginTop: \"10px\", color: \"gray\" }}>\n                <a href={news.url.news1}>{news.source.news1}</a>\n              </div>\n            </div>\n            <div className=\"News\">\n              <div className=\"NewsBorder\">\n                <a href={news.url.news1}>\n                  <img src={news.image.news1} width=\"500\" height=\"366\"></img>\n                </a>\n              </div>\n\n              <div className=\"NewsBorderSide\">\n                <a href={news.url.news2}>\n                  <img src={news.image.news2} width=\"100\" height=\"100\"></img>\n                </a>\n                <div style={{ textAlign: \"center\" }}>\n                  {news.headline.news2 + \" \"}{\" \"}\n                  <div style={{ marginTop: \"10px\", color: \"gray\" }}>\n                    {\" \"}\n                    <a href={news.url.news2}> {news.source.news2} </a>\n                  </div>\n                </div>\n                <a href={news.image.news3}>\n                  <img src={news.image.news3} width=\"100\" height=\"100\"></img>\n                </a>\n                <div style={{ textAlign: \"center\" }}>\n                  {\" \"}\n                  {news.headline.news2}\n                  <div style={{ marginTop: \"10px\", color: \"gray\" }}>\n                    {\" \"}\n                    <a href={news.image.news3}>{news.source.news3}</a>\n                  </div>\n                </div>\n                <a href={news.url.news4}>\n                  <img\n                    src={news.image.news4 + \" \"}\n                    width=\"100\"\n                    height=\"100\"\n                    style={{ marginTop: \"100x\", color: \"gray\" }}\n                  ></img>\n                </a>\n                <div style={{ textAlign: \"center\" }}>\n                  {news.headline.news4 + \" \"}\n                  <div style={{ marginTop: \"10px\", color: \"gray\" }}>\n                    {\" \"}\n                    <a href={news.url.news4}>{news.source.news4} </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport const Context = React.createContext();\n// Creates a Context Component\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { finnhubApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\nexport const BasicInfo = () => {\n  const [context] = useContext(Context);\n  const [price, setPrice] = useState({\n    open: \"\",\n    current: \"\",\n    change: \"\",\n    high: \"\",\n    low: \"\",\n    previousClose: \"\",\n  });\n  async function fetchOcPrice() {\n    const res = await fetch(\n      `https://finnhub.io/api/v1/quote?symbol=${context}&token=${finnhubApikey}`\n    );\n    const data = await res.json();\n    setPrice({\n      open: data.o.toFixed(2),\n      current: data.c.toFixed(2),\n      change: data.dp.toFixed(2),\n      high: data.h.toFixed(2),\n      low: data.l.toFixed(2),\n      previousClose: data.pc.toFixed(2),\n    });\n  }\n  useEffect(() => {\n    fetchOcPrice();\n  }, []);\n  console.log(price.open);\n  return (\n    <div>\n      <ul>\n        <li> Open price : {price.open}</li>\n        <li> Current price : {price.current}</li>\n        <li> Percent change : {price.change + \" \" + \"%\"}</li>\n        <li> Day highest price :{price.high}</li>\n        <li> Day lowest price : {price.low}</li>\n        <li> Previous close price : {price.previousClose}</li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Chart from \"chart.js/auto\";\nimport { Context } from \"../Context/Context\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport * as zoom from \"chartjs-plugin-zoom\";\nimport zoomPlugin from \"chartjs-plugin-zoom\";\nimport hammer from \"hammerjs\";\nimport { BasicInfo } from \"../Financials/BasicInfo\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nChart.register(zoomPlugin);\n// import { zoom } from \"chartjs-plugin-zoom\";\n// Importing Hooks, Context, API key, and Chart\n//\n//\n\nexport default function ChartLine() {\n  const [context, setContext] = useContext(Context);\n  const [spinner, setSpinner] = useState(true);\n  const [info, setInfo] = useState({});\n  const [date, setDate] = useState(\"Week\");\n  async function fetchChartMonth() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-price-full/${context}?serietype=line&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    // fetching some data from financial modeling API\n    const HistoricalData = data.historical;\n    switch (date) {\n      case \"Week\":\n        setInfo({\n          stockPrice: HistoricalData.slice(0, 8)\n            .reverse()\n            .map((price) => {\n              return price.close;\n            }),\n          stockDate: HistoricalData.slice(0, 8)\n            .reverse()\n            .map((date) => {\n              return date.date;\n            }),\n        });\n        break;\n      case \"Month\":\n        setInfo({\n          stockPrice: HistoricalData.slice(0, 31)\n            .reverse()\n            .map((price) => {\n              return price.close;\n            }),\n          stockDate: HistoricalData.slice(0, 31)\n            .reverse()\n            .map((date) => {\n              return date.date;\n            }),\n        });\n        break;\n      case \"Year\":\n        setInfo({\n          stockPrice: HistoricalData.slice(0, 366)\n            .reverse()\n            .map((price) => {\n              return price.close;\n            }),\n          stockDate: HistoricalData.slice(0, 366)\n            .reverse()\n            .map((date) => {\n              return date.date;\n            }),\n        });\n        break;\n      case \"Max\":\n        setInfo({\n          stockPrice: HistoricalData.reverse().map((price) => {\n            return price.close;\n          }),\n          stockDate: HistoricalData.map((date) => {\n            return date.date;\n          }),\n        });\n    }\n    setSpinner(false);\n    // Checks if the user select to see a Line Chart for a year/month/week and displays the asking info\n    //\n  }\n\n  useEffect(() => {\n    fetchChartMonth();\n  }, [date, context]);\n  // using useEffect to fetch the API only when date or context changes\n\n  const handleChange = (e) => {\n    setDate(e.target.value);\n  };\n  // handleChange function sets the date according to what the user selects\n  return (\n    <div className=\"Financial\">\n      {spinner ? (\n        <ClipLoader />\n      ) : (\n        <div>\n          <select\n            id=\"cars\"\n            name=\"cars\"\n            onChange={handleChange}\n            // style={{ marginLeft: \"100px\" }}\n          >\n            <option value=\"Week\">Week</option>\n            <option value=\"Month\">Month</option>\n            <option value=\"Year\">Year</option>\n            <option value=\"Max\">Max</option>\n          </select>\n          <div className=\"ChartLine\">\n            <Line // Line Chart\n              data={{\n                labels: info.stockDate,\n                datasets: [\n                  {\n                    label: `${context} Price:`, // Displays the the value the user Typed\n                    data: info.stockPrice, // Displays the stock price's\n                    fill: true,\n                    borderColor: \"rgb(75,192,192)\",\n                    tension: 0.1,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  zoom: {\n                    zoom: {\n                      wheel: {\n                        enabled: true, // SET SCROOL ZOOM TO TRUE\n                      },\n                      mode: \"y\",\n                      speed: 0.2,\n                      modifierKey: \"shift\",\n                    },\n                    pan: {\n                      enabled: true,\n                      mode: \"xy\",\n                      threshold: 1,\n                    },\n                    pinch: {\n                      enabled: true,\n                    },\n                    mode: \"xy\",\n                  },\n                },\n              }}\n            ></Line>\n            <BasicInfo></BasicInfo>\n          </div>\n        </div>\n      )}\n    </div>\n    //selection field\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\n// import Chart from \"chart.js/auto\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Context } from \"../Context/Context\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n//Imports Hooks, Bar Chart, Context and API key\nexport const RevenueEarning = () => {\n  const [context, setContext] = useContext(Context);\n  const [spinner, setSpinner] = useState(true);\n  const [fetchData, setFetchData] = useState({\n    revenue: \"\",\n    date: \"\",\n  });\n  async function fetchRevenueEarningYear() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/income-statement/${context}?limit=120&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    //fetch data from financial modeling API\n    //\n    setSpinner(false);\n    setFetchData({\n      revenue: data\n        .slice(0, 4)\n        .map((element) => element.revenue.toFixed(1) / 1000000)\n        .reverse(),\n      date: data\n        .slice(0, 4)\n        .map((element) => element.date.slice(0, 4))\n        .reverse(),\n    });\n    // Sets the state for date and revenue. Date is always for 4 years and revenue is to Millions\n    //\n  }\n  useEffect(() => {\n    fetchRevenueEarningYear();\n  }, [context]);\n  // Fetch only if the context change\n\n  const options = {\n    responsive: true,\n  };\n  const labels = fetchData.date;\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: `${context} Revenue to Millions`,\n        data: fetchData.revenue,\n        backgroundColor: \"rgba(255,99,132,0.5)\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"Financial\">\n      {\" \"}\n      {spinner ? (\n        <ClipLoader /> // Bar Chart\n      ) : (\n        <div className=\"Revenue\">\n          <Bar options={options} data={data} />\n        </div>\n      )}\n    </div>\n  );\n};\n","// A Component that has data tables for a stock's Balance sheet\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n// Importing Hooks, Context and API key\nexport const divider = 1000000;\nexport const checkNumbers = (attribute, constant) => {\n  if (attribute === undefined) {\n    return (attribute = \"-\");\n  } else if (attribute === !Number) {\n    return attribute;\n  } else if (constant) {\n    return attribute / constant;\n  } else {\n    return attribute;\n  }\n};\nexport const BalanceSheet = () => {\n  const [context] = useContext(Context);\n  const [dataInfo, setDataInfo] = useState({\n    date: [],\n    liabilitiesandstockholdersequity: [],\n    liabilities: [],\n    liabilitiescurrent: [],\n    commonstocksharesauthorized: [],\n    cashandcashequivalentsatcarryingvalue: [],\n    retainedearningsaccumulateddeficit: [],\n    liabilitiesnoncurrent: [],\n    propertyplantandequipmentnet: [],\n    commonstocksincludingadditionalpaidincapital: [],\n    commercialpaper: [],\n    longtermdebtcurrent: [],\n    commonstocksharesoutstanding: [],\n    otherliabilitiesnoncurrent: [],\n    marketablesecuritiescurrent: [],\n    otherliabilitiescurrent: [],\n    assetscurrent: [],\n    longtermdebtnoncurrent: [],\n    contractwithcustomerliabilitycurrent: [],\n    nontradereceivablescurrent: [],\n    commonstocksharesissued: [],\n    stockholdersequity: [],\n    accountsreceivablenetcurrent: [],\n    accountspayablecurrent: [],\n    assets: [],\n    assetsnoncurrent: [],\n    otherassetscurrent: [],\n    otherassetsnoncurrent: [],\n    inventorynet: [],\n    marketablesecuritiesnoncurrent: [],\n    accumulatedothercomprehensiveincomelossnetoftax: [],\n  });\n  //Initialize some data that we will need to add when we fetch the API\n  //\n  const [spinner, setSpinner] = useState(true);\n  async function fetchBalanceSheet() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/balance-sheet-statement-as-reported/${context}?limit=10&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    // fetch financial model API\n    //\n    //\n    setSpinner(false);\n    // Function\n    setDataInfo({\n      date: data\n        .map((element) => checkNumbers(element.date))\n        .slice(0, 4)\n        .reverse(),\n      //\n      liabilitiesandstockholdersequity: data\n        .map((element) =>\n          checkNumbers(element.liabilitiesandstockholdersequity, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n\n      //\n      liabilities: data\n        .map((element) => checkNumbers(element.liabilities, divider))\n        .slice(0, 4)\n        .reverse(),\n      liabilitiescurrent: data\n        .map((element) => checkNumbers(element.liabilitiescurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      commonstocksharesauthorized: data\n        .map((element) =>\n          checkNumbers(element.commonstocksharesauthorized, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      cashandcashequivalentsatcarryingvalue: data\n        .map((element) =>\n          checkNumbers(element.cashandcashequivalentsatcarryingvalue, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      retainedearningsaccumulateddeficit: data\n        .map((element) =>\n          checkNumbers(element.retainedearningsaccumulateddeficit, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      liabilitiesnoncurrent: data\n        .map((element) => checkNumbers(element.liabilitiesnoncurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      propertyplantandequipmentnet: data\n        .map((element) =>\n          checkNumbers(element.propertyplantandequipmentnet, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      commonstocksincludingadditionalpaidincapital: data\n        .map((element) =>\n          checkNumbers(\n            element.commonstocksincludingadditionalpaidincapital,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      commercialpaper: data\n        .map((element) => checkNumbers(element.commercialpaper, divider))\n        .slice(0, 4)\n        .reverse(),\n      longtermdebtcurrent: data\n        .map((element) => checkNumbers(element.longtermdebtcurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      commonstocksharesoutstanding: data\n        .map((element) =>\n          checkNumbers(element.commonstocksharesoutstanding, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      otherliabilitiesnoncurrent: data\n        .map((element) =>\n          checkNumbers(element.otherliabilitiesnoncurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      marketablesecuritiescurrent: data\n        .map((element) =>\n          checkNumbers(element.marketablesecuritiescurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      otherliabilitiescurrent: data\n        .map((element) =>\n          checkNumbers(element.otherliabilitiescurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      assetscurrent: data\n        .map((element) => checkNumbers(element.assetscurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      longtermdebtnoncurrent: data\n        .map((element) => checkNumbers(element.longtermdebtnoncurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      contractwithcustomerliabilitycurrent: data\n        .map((element) =>\n          checkNumbers(element.contractwithcustomerliabilitycurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      nontradereceivablescurrent: data\n        .map((element) =>\n          checkNumbers(element.nontradereceivablescurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      commonstocksharesissued: data\n        .map((element) =>\n          checkNumbers(element.commonstocksharesissued, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      stockholdersequity: data\n        .map((element) => checkNumbers(element.stockholdersequity, divider))\n        .slice(0, 4)\n        .reverse(),\n      accountsreceivablenetcurrent: data\n        .map((element) =>\n          checkNumbers(element.accountsreceivablenetcurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      accountspayablecurrent: data\n        .map((element) => checkNumbers(element.accountspayablecurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      assets: data\n        .map((element) => checkNumbers(element.assets, divider))\n        .slice(0, 4)\n        .reverse(),\n      assetsnoncurrent: data\n        .map((element) => checkNumbers(element.assetsnoncurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      otherassetscurrent: data\n        .map((element) => checkNumbers(element.otherassetscurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      otherassetsnoncurrent: data\n        .map((element) => checkNumbers(element.otherassetsnoncurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      inventorynet: data\n        .map((element) => checkNumbers(element.inventorynet, divider))\n        .slice(0, 4)\n        .reverse(),\n      marketablesecuritiesnoncurrent: data\n        .map((element) =>\n          checkNumbers(element.marketablesecuritiesnoncurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      accumulatedothercomprehensiveincomelossnetoftax: data\n        .map((element) =>\n          checkNumbers(\n            element.accumulatedothercomprehensiveincomelossnetoftax,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n    });\n  }\n  useEffect(() => {\n    fetchBalanceSheet();\n  }, [context]);\n  return (\n    <div className=\"Financial\">\n      {\" \"}\n      {spinner ? (\n        <ClipLoader />\n      ) : (\n        <div>\n          <h1> Balance Sheet</h1>\n          <table>\n            <tbody>\n              <tr>\n                <th>About</th>\n                {dataInfo.date.map((item) => (\n                  <th>{item}</th>\n                ))}\n              </tr>\n              <tr>\n                <td> Liabilities and Stockholders Equity</td>\n                {dataInfo.liabilitiesandstockholdersequity.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Liabilities</td>\n                {dataInfo.liabilities.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Liabilities Current</td>\n                {dataInfo.liabilitiescurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Common Stock Shares Authorized</td>\n                {dataInfo.commonstocksharesauthorized.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Cash and Cash Equivalents at carry ingvalue</td>\n                {dataInfo.cashandcashequivalentsatcarryingvalue.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Retained earnings accumulated deficit</td>\n                {dataInfo.retainedearningsaccumulateddeficit.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Liabilities non-current</td>\n                {dataInfo.liabilitiesnoncurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Cost of goods and services sold</td>\n                {dataInfo.liabilitiesnoncurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Property Plant and Equipment Net</td>\n                {dataInfo.propertyplantandequipmentnet.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Common stocks Including additional paid in capital</td>\n                {dataInfo.commonstocksincludingadditionalpaidincapital.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td> Long Term Debt Current </td>\n                {dataInfo.longtermdebtcurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Common Stock Shares Outstanding </td>\n                {dataInfo.commonstocksharesoutstanding.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Other Liabilities Non-current </td>\n                {dataInfo.otherliabilitiesnoncurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Marketable Securities Current </td>\n                {dataInfo.marketablesecuritiescurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Other Liabilities Current </td>\n                {dataInfo.otherliabilitiescurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Assets Current </td>\n                {dataInfo.assetscurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Long Term Debt Non-Current </td>\n                {dataInfo.longtermdebtnoncurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Contract with Customer Liability Current </td>\n                {dataInfo.contractwithcustomerliabilitycurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Non-Trade Receivables Current </td>\n                {dataInfo.nontradereceivablescurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Common Stock Shares Issued </td>\n                {dataInfo.commonstocksharesissued.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Stock Holders Equity </td>\n                {dataInfo.stockholdersequity.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Accounts Receivable Net Current </td>\n                {dataInfo.accountsreceivablenetcurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Accounts Payable Current </td>\n                {dataInfo.accountspayablecurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Assets </td>\n                {dataInfo.assets.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Assets Non-Current </td>\n                {dataInfo.assetsnoncurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Other Assets Non-Current </td>\n                {dataInfo.otherassetsnoncurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Inventory Net </td>\n                {dataInfo.inventorynet.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Marketable Securities Non-Current </td>\n                {dataInfo.marketablesecuritiesnoncurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>\n                  {\" \"}\n                  Accumulated Other Comprehensive Income Loss Net of Tax{\" \"}\n                </td>\n                {dataInfo.accumulatedothercomprehensiveincomelossnetoftax.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td> Other Assets Current </td>\n                {dataInfo.otherassetscurrent.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context/Context\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport { divider } from \"./BalanceSheet\";\nimport { checkNumbers } from \"./BalanceSheet\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport const IncomeStatement = () => {\n  const [context, setContext] = useContext(Context);\n  const [spinner, setSpinner] = useState(true);\n  const [dataInfo, setDataInfo] = useState({\n    date: [],\n    costofgoodsandservicessold: [],\n    netincomeloss: [],\n    researchanddevelopmentexpense: [],\n    grossprofit: [],\n    othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax:\n      [],\n    othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax:\n      [],\n    othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax:\n      [],\n    weightedaveragenumberofdilutedsharesoutstanding: [],\n    weightedaveragenumberofsharesoutstandingbasic: [],\n    operatingincomeloss: [],\n    nonoperatingincomeexpense: [],\n    incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest:\n      [],\n    othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax:\n      [],\n    earningspersharebasic: [],\n    incometaxexpensebenefit: [],\n    othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax:\n      [],\n    revenuefromcontractwithcustomerexcludingassessedtax: [],\n    earningspersharediluted: [],\n    operatingexpenses: [],\n    othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax:\n      [],\n    sellinggeneralandadministrativeexpense: [],\n    othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax:\n      [],\n    othercomprehensiveincomelossnetoftaxportionattributabletoparent: [],\n    comprehensiveincomenetoftax: [],\n  });\n\n  async function fetchCashFlow() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/income-statement-as-reported/${context}?limit=10&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    setSpinner(false);\n    setDataInfo({\n      date: data\n        .map((element) => checkNumbers(element.date))\n        .slice(0, 4)\n        .reverse(),\n      costofgoodsandservicessold: data\n        .map((element) =>\n          checkNumbers(element.costofgoodsandservicessold, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      netincomeloss: data\n        .map((element) => checkNumbers(element.netincomeloss, divider))\n        .slice(0, 4)\n        .reverse(),\n      researchanddevelopmentexpense: data\n        .map((element) =>\n          checkNumbers(element.researchanddevelopmentexpense, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      grossprofit: data\n        .map((element) => checkNumbers(element.grossprofit, divider))\n        .slice(0, 4)\n        .reverse(),\n      othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      weightedaveragenumberofdilutedsharesoutstanding: data\n        .map((element) =>\n          checkNumbers(\n            element.weightedaveragenumberofdilutedsharesoutstanding,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      weightedaveragenumberofsharesoutstandingbasic: data\n        .map((element) =>\n          checkNumbers(\n            element.weightedaveragenumberofsharesoutstandingbasic,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      operatingincomeloss: data\n        .map((element) => checkNumbers(element.operatingincomeloss, divider))\n        .slice(0, 4)\n        .reverse(),\n      nonoperatingincomeexpense: data\n        .map((element) =>\n          checkNumbers(element.nonoperatingincomeexpense, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      earningspersharebasic: data\n        .map((element) => checkNumbers(element.earningspersharebasic))\n        .slice(0, 4)\n        .reverse(),\n      incometaxexpensebenefit: data\n        .map((element) =>\n          checkNumbers(element.incometaxexpensebenefit, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      revenuefromcontractwithcustomerexcludingassessedtax: data\n        .map((element) =>\n          checkNumbers(\n            element.revenuefromcontractwithcustomerexcludingassessedtax,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      earningspersharediluted: data\n        .map((element) => checkNumbers(element.earningspersharediluted))\n        .slice(0, 4)\n        .reverse(),\n      operatingexpenses: data\n        .map((element) => checkNumbers(element.operatingexpenses, divider))\n        .slice(0, 4)\n        .reverse(),\n      othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      sellinggeneralandadministrativeexpense: data\n        .map((element) =>\n          checkNumbers(element.sellinggeneralandadministrativeexpense, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      othercomprehensiveincomelossnetoftaxportionattributabletoparent: data\n        .map((element) =>\n          checkNumbers(\n            element.othercomprehensiveincomelossnetoftaxportionattributabletoparent,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      comprehensiveincomenetoftax: data\n        .map((element) =>\n          checkNumbers(element.comprehensiveincomenetoftax, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n    });\n  }\n  useEffect(() => {\n    fetchCashFlow();\n  }, [context]);\n  return (\n    <div className=\"Financial\">\n      {\" \"}\n      {spinner ? (\n        <ClipLoader />\n      ) : (\n        <div>\n          <h1> Income Statement </h1>\n          <h6> Numbers to Millions</h6>\n          <table id=\"simple-board\">\n            <tbody>\n              <tr>\n                <th>About</th>\n                {dataInfo.date.map((item) => (\n                  <th>{item}</th>\n                ))}\n              </tr>\n              <tr>\n                <td> Cost of goods and services sold</td>\n                {dataInfo.costofgoodsandservicessold.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Net Income Loss</td>\n                {dataInfo.netincomeloss.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Research And Development Expense</td>\n                {dataInfo.researchanddevelopmentexpense.map((item) => (\n                  <td> {item === \"\" ? \"N/A\" : item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Gross Profit </td>\n                {dataInfo.grossprofit.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>\n                  Other Comprehensive Income Loss Reclassification Adjustment\n                  From a OCI for Sale of securities net of tax\n                </td>\n                {dataInfo.othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax.map(\n                  (item) => (\n                    <td> {item === NaN ? \"\" : item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>\n                  Other Comprehensive Income Loss Derivative Instrument Gain\n                  Loss Before Reclassification After Tax\n                </td>\n                {dataInfo.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax.map(\n                  (item) => (\n                    <td> {item == NaN ? \"\" : item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>\n                  Other Comprehensive Income Loss Foreign Currency Transaction\n                  And Translation Adjustment Net of Tax\n                </td>\n                {dataInfo.othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>Weighted Average Number Of Diluted Shares Outstanding</td>\n                {dataInfo.weightedaveragenumberofdilutedsharesoutstanding.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>Weighted Average Number Of Shares Outstanding Basic</td>\n                {dataInfo.weightedaveragenumberofsharesoutstandingbasic.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>Operating Income Loss</td>\n                {dataInfo.operatingincomeloss.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>Non-Operating Income Expense</td>\n                {dataInfo.nonoperatingincomeexpense.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>\n                  Income Loss From Continuing Operations Before Income Taxes\n                  Extraordinary Items Non-Controlling Interest\n                </td>\n                {dataInfo.incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>\n                  Other Comprehensive Income Loss Available For Sale Securities\n                  Adjustment Net of Tax\n                </td>\n                {dataInfo.othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>Earnings per Share Basic</td>\n                {dataInfo.earningspersharebasic.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>Income Tax Expense Benefit</td>\n                {dataInfo.incometaxexpensebenefit.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>\n                  Other Comprehensive Income Unrealized Holding Gain Loss On\n                  Securities a Rising During Period Net of Tax\n                </td>\n                {dataInfo.othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>\n                  Revenue From Contract With Customer Excluding Assessed Tax\n                </td>\n                {dataInfo.revenuefromcontractwithcustomerexcludingassessedtax.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>Earnings per Share Diluted</td>\n                {dataInfo.earningspersharediluted.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>Operating Expenses</td>\n                {dataInfo.operatingexpenses.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>\n                  Other Comprehensive Income Loss Derivative Instrument Gain\n                  Loss After Reclassification And Tax\n                </td>\n                {dataInfo.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>Selling General And Admin Is Rative Expense</td>\n                {dataInfo.sellinggeneralandadministrativeexpense.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>\n                  Other Comprehensive Income Loss Derivative Instrument Gain\n                  Loss Reclassification After Tax\n                </td>\n                {dataInfo.othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>\n                  Other Comprehensive Income Loss Net of Tax Portion\n                  Attributable to Parent\n                </td>\n                {dataInfo.othercomprehensiveincomelossnetoftaxportionattributabletoparent.map(\n                  (item) => (\n                    <td>{item}</td>\n                  )\n                )}\n              </tr>\n              <tr>\n                <td>Comprehensive Income Net of Tax</td>\n                {dataInfo.comprehensiveincomenetoftax.map((item) => (\n                  <td>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const NavBar = () => {\n  return (\n    // <Outlet>\n    <div>\n      <div className=\"NavBar\">\n        <ul className=\"NavBarList\">\n          <NavLink to=\"news\" className=\"NavBarLi\">\n            Market News\n          </NavLink>\n          <NavLink to=\"stocks\" className=\"NavBarLi\">\n            Stocks\n          </NavLink>\n          <NavLink to=\"crypto\" className=\"NavBarLi\">\n            Crypto\n          </NavLink>\n        </ul>\n      </div>\n    </div>\n    // </Outlet>\n  );\n};\n","import React from \"react\";\nimport \"../css/App.css\";\nexport const Banner = () => {\n  return (\n    <div>\n      <div className=\"Banner\"> BULLMARKET WEB APP</div>\n    </div>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context/Context\";\nimport \"../css/App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/fontawesome-free-solid\";\n\nexport const Search = () => {\n  const [value, setValue] = useState();\n  const [context, setContext] = useContext(Context);\n  const Submit = () => {\n    setContext(value);\n  };\n  const handleChange = (e) => {\n    setValue(e.target.value.toUpperCase());\n  };\n\n  return (\n    <div>\n      <div className=\"Search\">\n        <input\n          maxLength={4}\n          required\n          autoFocus\n          placeholder=\"Search for stock symbols\"\n          type=\"text\"\n          style={{\n            height: \"25px\",\n            width: \"500px\",\n            borderColor: \"grey\",\n            borderWidth: \"1px\",\n            outline: \"none\",\n          }}\n          onChange={handleChange}\n        ></input>\n        <button\n          style={{\n            height: \"29px\",\n            width: \"100px\",\n            backgroundColor: \"#38f\",\n            borderStyle: \"none\",\n          }}\n          onClick={Submit}\n        >\n          <FontAwesomeIcon icon={faSearch} color=\"white\"></FontAwesomeIcon>\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nexport const StocksNavBar = () => {\n  return (\n    <>\n      <div>\n        <div>\n          <nav className=\"SearchBar\">\n            <NavLink to=\"news\" className=\"SearchBarLink\">\n              News\n            </NavLink>\n            <NavLink to=\"balancesheet\" className=\"SearchBarLink\">\n              BalanceSheet\n            </NavLink>\n            <NavLink to=\"incomestatement\" className=\"SearchBarLink\">\n              IncomeStatement\n            </NavLink>\n            <NavLink to=\"cashflow\" className=\"SearchBarLink\">\n              Cash Flow\n            </NavLink>\n            <NavLink to=\"revenue\" className=\"SearchBarLink\">\n              Revenue Chart\n            </NavLink>\n            <NavLink to=\"chart\" className=\"SearchBarLink\">\n              Price Chart\n            </NavLink>\n            <NavLink to=\"ratio\" className=\"SearchBarLink\">\n              Ratios\n            </NavLink>\n          </nav>\n        </div>\n        <Outlet></Outlet>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Search } from \"../Search/Search\";\nimport { StocksNavBar } from \"./StocksNavBar\";\n\nexport const Stocks = () => {\n  return (\n    <>\n      <Search></Search>\n      <StocksNavBar></StocksNavBar>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\nimport { checkNumbers } from \"./BalanceSheet\";\nimport { divider } from \"./BalanceSheet\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport const CashFlow = () => {\n  const [context, setContext] = useContext(Context);\n  const [spinner, setSpinner] = useState(true);\n  const [dataInfo, setDataInfo] = useState({\n    date: [],\n    netIncome: [],\n    netincomeloss: [],\n    depreciationAndAmortization: [],\n    deferredIncomeTax: [],\n    stockBasedCompensation: [],\n    changeInWorkingCapital: [],\n    accountsReceivables: [],\n    inventory: [],\n    accountsPayables: [],\n    otherWorkingCapital: [],\n    otherNonCashItems: [],\n    netCashProvidedByOperatingActivities: [],\n    investmentsInPropertyPlantAndEquipment: [],\n    acquisitionsNet: [],\n    purchasesOfInvestments: [],\n    salesMaturitiesOfInvestments: [],\n    otherInvestingActivites: [],\n    netCashUsedForInvestingActivites: [],\n    debtRepayment: [],\n    commonStockIssued: [],\n    commonStockRepurchased: [],\n    dividendsPaid: [],\n    otherFinancingActivites: [],\n    netCashUsedProvidedByFinancingActivities: [],\n    effectOfForexChangesOnCash: [],\n    netChangeInCash: [],\n    cashAtEndOfPeriod: [],\n    cashAtBeginningOfPeriod: [],\n    operatingCashFlow: [],\n    capitalExpenditure: [],\n    freeCashFlow: [],\n  });\n\n  async function fetchIncomeStatement() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/cash-flow-statement/${context}?limit=120&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    setSpinner(false);\n    setDataInfo({\n      date: data\n        .map((element) => checkNumbers(element.date))\n        .slice(0, 4)\n        .reverse(),\n      netIncome: data\n        .map((element) => checkNumbers(element.netIncome, divider))\n        .slice(0, 4)\n        .reverse(),\n      netincomeloss: data\n        .map((element) => checkNumbers(element.netincomeloss, divider))\n        .slice(0, 4)\n        .reverse(),\n      depreciationAndAmortization: data\n        .map((element) =>\n          checkNumbers(element.depreciationAndAmortization, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      deferredIncomeTax: data\n        .map((element) => checkNumbers(element.deferredIncomeTax, divider))\n        .slice(0, 4)\n        .reverse(),\n      stockBasedCompensation: data\n        .map((element) => checkNumbers(element.stockBasedCompensation, divider))\n        .slice(0, 4)\n        .reverse(),\n      changeInWorkingCapital: data\n        .map((element) => checkNumbers(element.changeInWorkingCapital, divider))\n        .slice(0, 4)\n        .reverse(),\n      accountsReceivables: data\n        .map((element) => checkNumbers(element.accountsReceivables, divider))\n        .slice(0, 4)\n        .reverse(),\n      inventory: data\n        .map((element) => checkNumbers(element.inventory, divider))\n        .slice(0, 4)\n        .reverse(),\n      accountsPayables: data\n        .map((element) => checkNumbers(element.accountsPayables, divider))\n        .slice(0, 4)\n        .reverse(),\n      otherWorkingCapital: data\n        .map((element) => checkNumbers(element.otherWorkingCapital, divider))\n        .slice(0, 4)\n        .reverse(),\n      otherNonCashItems: data\n        .map((element) => checkNumbers(element.otherNonCashItems, divider))\n        .slice(0, 4)\n        .reverse(),\n      netCashProvidedByOperatingActivities: data\n        .map((element) =>\n          checkNumbers(element.netCashProvidedByOperatingActivities, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      investmentsInPropertyPlantAndEquipment: data\n        .map((element) =>\n          checkNumbers(element.investmentsInPropertyPlantAndEquipment, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      acquisitionsNet: data\n        .map((element) => checkNumbers(element.acquisitionsNet, divider))\n        .slice(0, 4)\n        .reverse(),\n      purchasesOfInvestments: data\n        .map((element) => checkNumbers(element.purchasesOfInvestments, divider))\n        .slice(0, 4)\n        .reverse(),\n      salesMaturitiesOfInvestments: data\n        .map((element) =>\n          checkNumbers(element.salesMaturitiesOfInvestments, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      otherInvestingActivites: data\n        .map((element) =>\n          checkNumbers(element.otherInvestingActivites, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      netCashUsedForInvestingActivites: data\n        .map((element) =>\n          checkNumbers(element.netCashUsedForInvestingActivites, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      debtRepayment: data\n        .map((element) => checkNumbers(element.debtRepayment, divider))\n        .slice(0, 4)\n        .reverse(),\n      commonStockIssued: data\n        .map((element) => checkNumbers(element.commonStockIssued, divider))\n        .slice(0, 4)\n        .reverse(),\n      commonStockRepurchased: data\n        .map((element) => checkNumbers(element.commonStockRepurchased, divider))\n        .slice(0, 4)\n        .reverse(),\n      dividendsPaid: data\n        .map((element) => checkNumbers(element.dividendsPaid, divider))\n        .slice(0, 4)\n        .reverse(),\n      otherFinancingActivites: data\n        .map((element) =>\n          checkNumbers(element.otherFinancingActivites, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      netCashUsedProvidedByFinancingActivities: data\n        .map((element) =>\n          checkNumbers(\n            element.netCashUsedProvidedByFinancingActivities,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      effectOfForexChangesOnCash: data\n        .map((element) =>\n          checkNumbers(element.effectOfForexChangesOnCash, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      netChangeInCash: data\n        .map((element) => checkNumbers(element.netChangeInCash, divider))\n        .slice(0, 4)\n        .reverse(),\n      cashAtEndOfPeriod: data\n        .map((element) => checkNumbers(element.cashAtEndOfPeriod, divider))\n        .slice(0, 4)\n        .reverse(),\n      cashAtBeginningOfPeriod: data\n        .map((element) =>\n          checkNumbers(element.cashAtBeginningOfPeriod, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      operatingCashFlow: data\n        .map((element) => checkNumbers(element.operatingCashFlow, divider))\n        .slice(0, 4)\n        .reverse(),\n      capitalExpenditure: data\n        .map((element) => checkNumbers(element.capitalExpenditure, divider))\n        .slice(0, 4)\n        .reverse(),\n      freeCashFlow: data\n        .map((element) => checkNumbers(element.freeCashFlow, divider))\n        .slice(0, 4)\n        .reverse(),\n    });\n  }\n  useEffect(() => {\n    fetchIncomeStatement();\n  }, [context]);\n  return (\n    <div className=\"Financial\">\n      {spinner ? (\n        <ClipLoader />\n      ) : (\n        <div>\n          <h1> Cash Flow</h1>\n          <h6> Numbers to Millions</h6>\n          <table>\n            <tbody>\n              <tr>\n                <th>About</th>\n                {dataInfo.date.map((item) => (\n                  <th key={item}>{item}</th>\n                ))}\n              </tr>\n              <tr>\n                <td> Net Income</td>\n                {dataInfo.netIncome.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Depreciation and Amortization</td>\n                {dataInfo.depreciationAndAmortization.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Deferred Income Tax</td>\n                {dataInfo.deferredIncomeTax.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Stock Based Compensation</td>\n                {dataInfo.stockBasedCompensation.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Change In Working Capital</td>\n                {dataInfo.changeInWorkingCapital.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Accounts Receivables</td>\n                {dataInfo.accountsReceivables.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Inventory</td>\n                {dataInfo.inventory.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Accounts Payables</td>\n                {dataInfo.accountsPayables.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Other Working Capital</td>\n                {dataInfo.otherWorkingCapital.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Other Non-Cash Items</td>\n                {dataInfo.otherNonCashItems.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Net Cash Provided By Operating Activities</td>\n                {dataInfo.netCashProvidedByOperatingActivities.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Investments In Property Plant And Equipment</td>\n                {dataInfo.investmentsInPropertyPlantAndEquipment.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Acquisitions Net</td>\n                {dataInfo.acquisitionsNet.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Purchases Of Investments</td>\n                {dataInfo.purchasesOfInvestments.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Sales Maturities Of Investments</td>\n                {dataInfo.salesMaturitiesOfInvestments.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Other Investing Activites</td>\n                {dataInfo.otherInvestingActivites.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Net Cash Used For Investing Activites</td>\n                {dataInfo.netCashUsedForInvestingActivites.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Debt Repayment</td>\n                {dataInfo.debtRepayment.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Common Stock Issued</td>\n                {dataInfo.commonStockIssued.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Common Stock Repurchased</td>\n                {dataInfo.commonStockRepurchased.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Dividends Paid</td>\n                {dataInfo.dividendsPaid.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Other Financing Activites</td>\n                {dataInfo.otherFinancingActivites.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Net Cash Used Provided By Financing Activities</td>\n                {dataInfo.otherFinancingActivites.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Effect Of Forex Changes On Cash</td>\n                {dataInfo.effectOfForexChangesOnCash.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Net Change In Cash</td>\n                {dataInfo.netChangeInCash.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Cash At End Of Period</td>\n                {dataInfo.cashAtEndOfPeriod.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Cash At Beginning Of Period</td>\n                {dataInfo.cashAtBeginningOfPeriod.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Operating Cash Flow</td>\n                {dataInfo.operatingCashFlow.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Capital Expenditure</td>\n                {dataInfo.capitalExpenditure.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n              <tr>\n                <td> Free Cash Flow</td>\n                {dataInfo.freeCashFlow.map((item) => (\n                  <td key={item}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { finnhubApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nexport const StockNews = () => {\n  const [context, setContext] = useContext(Context);\n  const [spinner, setSpinner] = useState(true);\n  const [news, setNews] = useState({\n    headline: \"\",\n    image: \"\",\n    source: \"\",\n    url: \"\",\n    summary: \"\",\n  });\n  async function fetchStockNews() {\n    const res = await fetch(\n      `https://finnhub.io/api/v1/company-news?symbol=${context}&from=2021-09-01&to=2021-09-09&token=${finnhubApikey}`\n    );\n    const data = await res.json();\n    const [news1, news2, news3, news4] = [data[0], data[1], data[2], data[3]];\n    setSpinner(false);\n    setNews({\n      headline: {\n        headline1: news1.headline,\n        headline2: news2.headline,\n        headline3: news3.headline,\n        headline4: news4.headline,\n      },\n      image: {\n        image1: news1.image,\n        image2: news2.image,\n        image3: news3.image,\n        image4: news4.image,\n      },\n      summary: {\n        summary1: news1.summary,\n        summary2: news2.summary,\n        summary3: news3.summary,\n        summary4: news4.summary,\n      },\n    });\n  }\n  useEffect(() => {\n    fetchStockNews();\n  }, [context]);\n  return (\n    <div className=\"Financial\">\n      {\" \"}\n      {spinner ? (\n        <ClipLoader />\n      ) : (\n        <div style={{ margin: \"100px\" }}>\n          <div>\n            <img src={news.image.image1} width=\"200\" height=\"200\"></img>\n            <div> {news.headline.headline1}</div>\n            <div> {news.summary.summary1}</div>\n          </div>\n          <div className=\"News\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\nimport \"../css/App.css\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport const Ratio = () => {\n  const [context] = useContext(Context);\n  const [spinner, setSpinner] = useState(true);\n  const [ratio, setRatio] = useState({\n    dividendYielTTM: \"\",\n    dividendYielPercentageTTM: \"\",\n    peRatioTTM: \"\",\n    pegRatioTTM: \"\",\n    payoutRatioTTM: \"\",\n    currentRatioTTM: \"\",\n    quickRatioTTM: \"\",\n    cashRatioTTM: \"\",\n    daysOfSalesOutstandingTTM: \"\",\n    daysOfInventoryOutstandingTTM: \"\",\n    operatingCycleTTM: \"\",\n    daysOfPayablesOutstandingTTM: \"\",\n    cashConversionCycleTTM: \"\",\n    grossProfitMarginTTM: \"\",\n    operatingProfitMarginTTM: \"\",\n    pretaxProfitMarginTTM: \"\",\n    netProfitMarginTTM: \"\",\n    effectiveTaxRateTTM: \"\",\n    returnOnAssetsTTM: \"\",\n    returnOnEquityTTM: \"\",\n    returnOnCapitalEmployedTTM: \"\",\n    netIncomePerEBTTTM: \"\",\n    ebtPerEbitTTM: \"\",\n    ebitPerRevenueTTM: \"\",\n    debtRatioTTM: \"\",\n    debtEquityRatioTTM: \"\",\n    longTermDebtToCapitalizationTTM: \"\",\n    totalDebtToCapitalizationTTM: \"\",\n    interestCoverageTTM: \"\",\n    cashFlowToDebtRatioTTM: \"\",\n    companyEquityMultiplierTTM: \"\",\n    receivablesTurnoverTTM: \"\",\n    payablesTurnoverTTM: \"\",\n    inventoryTurnoverTTM: \"\",\n    fixedAssetTurnoverTTM: \"\",\n    assetTurnoverTTM: \"\",\n    operatingCashFlowPerShareTTM: \"\",\n    freeCashFlowPerShareTTM: \"\",\n    cashPerShareTTM: \"\",\n    operatingCashFlowSalesRatioTTM: \"\",\n    freeCashFlowOperatingCashFlowRatioTTM: \"\",\n    cashFlowCoverageRatiosTTM: \"\",\n    shortTermCoverageRatiosTTM: \"\",\n    capitalExpenditureCoverageRatioTTM: \"\",\n    dividendPaidAndCapexCoverageRatioTTM: \"\",\n    priceBookValueRatioTTM: \"\",\n    priceToBookRatioTTM: \"\",\n    priceToSalesRatioTTM: \"\",\n    priceEarningsRatioTTM: \"\",\n    priceToFreeCashFlowsRatioTTM: \"\",\n    priceToOperatingCashFlowsRatioTTM: \"\",\n    priceCashFlowRatioTTM: \"\",\n    priceEarningsToGrowthRatioTTM: \"\",\n    priceSalesRatioTTM: \"\",\n    dividendYieldTTM: \"\",\n    enterpriseValueMultipleTTM: \"\",\n    priceFairValueTTM: \"\",\n    dividendPerShareTTM: \"\",\n  });\n  async function fetchRatio() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/ratios-ttm/AAPL?apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    setSpinner(false);\n    setRatio({\n      dividendYielTTM: data[0].dividendYielTTM.toFixed(3),\n      dividendYielPercentageTTM: data[0].dividendYielPercentageTTM.toFixed(3),\n      peRatioTTM: data[0].peRatioTTM.toFixed(3),\n      pegRatioTTM: data[0].pegRatioTTM.toFixed(3),\n      payoutRatioTTM: data[0].payoutRatioTTM.toFixed(3),\n      currentRatioTTM: data[0].currentRatioTTM.toFixed(3),\n      quickRatioTTM: data[0].quickRatioTTM.toFixed(3),\n      cashRatioTTM: data[0].cashRatioTTM.toFixed(3),\n      daysOfSalesOutstandingTTM: data[0].daysOfSalesOutstandingTTM.toFixed(3),\n      daysOfInventoryOutstandingTTM:\n        data[0].daysOfInventoryOutstandingTTM.toFixed(3),\n      operatingCycleTTM: data[0].operatingCycleTTM.toFixed(3),\n      daysOfPayablesOutstandingTTM:\n        data[0].daysOfPayablesOutstandingTTM.toFixed(3),\n      cashConversionCycleTTM: data[0].cashConversionCycleTTM.toFixed(3),\n      grossProfitMarginTTM: data[0].grossProfitMarginTTM.toFixed(3),\n      operatingProfitMarginTTM: data[0].operatingProfitMarginTTM.toFixed(3),\n      pretaxProfitMarginTTM: data[0].pretaxProfitMarginTTM.toFixed(3),\n      netProfitMarginTTM: data[0].netProfitMarginTTM.toFixed(3),\n      effectiveTaxRateTTM: data[0].effectiveTaxRateTTM.toFixed(3),\n      returnOnAssetsTTM: data[0].returnOnAssetsTTM.toFixed(3),\n      returnOnEquityTTM: data[0].returnOnEquityTTM.toFixed(3),\n      returnOnCapitalEmployedTTM: data[0].returnOnCapitalEmployedTTM.toFixed(3),\n      netIncomePerEBTTTM: data[0].netIncomePerEBTTTM.toFixed(3),\n      ebtPerEbitTTM: data[0].ebtPerEbitTTM.toFixed(3),\n      ebitPerRevenueTTM: data[0].ebitPerRevenueTTM.toFixed(3),\n      debtRatioTTM: data[0].debtRatioTTM.toFixed(3),\n      debtEquityRatioTTM: data[0].debtEquityRatioTTM.toFixed(3),\n      totalDebtToCapitalizationTTM:\n        data[0].totalDebtToCapitalizationTTM.toFixed(3),\n      interestCoverageTTM: data[0].interestCoverageTTM.toFixed(3),\n      cashFlowToDebtRatioTTM: data[0].cashFlowToDebtRatioTTM.toFixed(3),\n      companyEquityMultiplierTTM: data[0].companyEquityMultiplierTTM.toFixed(3),\n      receivablesTurnoverTTM: data[0].receivablesTurnoverTTM.toFixed(3),\n      payablesTurnoverTTM: data[0].payablesTurnoverTTM.toFixed(3),\n      inventoryTurnoverTTM: data[0].inventoryTurnoverTTM.toFixed(3),\n      fixedAssetTurnoverTTM: data[0].fixedAssetTurnoverTTM.toFixed(3),\n      assetTurnoverTTM: data[0].assetTurnoverTTM.toFixed(3),\n      operatingCashFlowPerShareTTM:\n        data[0].operatingCashFlowPerShareTTM.toFixed(3),\n      freeCashFlowPerShareTTM: data[0].freeCashFlowPerShareTTM.toFixed(3),\n      cashPerShareTTM: data[0].cashPerShareTTM.toFixed(3),\n      operatingCashFlowSalesRatioTTM:\n        data[0].operatingCashFlowSalesRatioTTM.toFixed(3),\n      freeCashFlowOperatingCashFlowRatioTTM:\n        data[0].freeCashFlowOperatingCashFlowRatioTTM.toFixed(3),\n      cashFlowCoverageRatiosTTM: data[0].cashFlowCoverageRatiosTTM.toFixed(3),\n      shortTermCoverageRatiosTTM: data[0].shortTermCoverageRatiosTTM.toFixed(3),\n      capitalExpenditureCoverageRatioTTM:\n        data[0].capitalExpenditureCoverageRatioTTM.toFixed(3),\n      dividendPaidAndCapexCoverageRatioTTM:\n        data[0].dividendPaidAndCapexCoverageRatioTTM.toFixed(3),\n      priceBookValueRatioTTM: data[0].priceBookValueRatioTTM.toFixed(3),\n      priceToBookRatioTTM: data[0].priceToBookRatioTTM.toFixed(3),\n      priceToSalesRatioTTM: data[0].priceToSalesRatioTTM.toFixed(3),\n      priceEarningsRatioTTM: data[0].priceEarningsRatioTTM.toFixed(3),\n      priceToFreeCashFlowsRatioTTM:\n        data[0].priceToFreeCashFlowsRatioTTM.toFixed(3),\n      priceToOperatingCashFlowsRatioTTM:\n        data[0].priceToOperatingCashFlowsRatioTTM.toFixed(3),\n      priceCashFlowRatioTTM: data[0].priceCashFlowRatioTTM.toFixed(3),\n      priceEarningsToGrowthRatioTTM:\n        data[0].priceEarningsToGrowthRatioTTM.toFixed(3),\n      priceSalesRatioTTM: data[0].priceSalesRatioTTM.toFixed(3),\n      dividendYieldTTM: data[0].dividendYieldTTM.toFixed(3),\n      enterpriseValueMultipleTTM: data[0].enterpriseValueMultipleTTM.toFixed(3),\n      priceFairValueTTM: data[0].priceFairValueTTM.toFixed(3),\n      dividendPerShareTTM: data[0].dividendPerShareTTM.toFixed(3),\n    });\n  }\n  useEffect(() => {\n    fetchRatio();\n  }, [context]);\n\n  return (\n    <>\n      <div className=\"Financial\">\n        {\" \"}\n        {spinner ? (\n          <ClipLoader />\n        ) : (\n          <div style={{ backgroundColor: \"#f5f5f5\", height: \"auto\" }}>\n            <div className=\"RatioTable\">\n              <table>\n                <tbody>\n                  <tr>\n                    <th>Ratios</th>\n                  </tr>\n                  <tr>\n                    <td>Dividend Yield : {ratio.dividendYielTTM}</td>\n                    <td>\n                      Dividend Yield Percentage :\n                      {ratio.dividendYielPercentageTTM + \"%\"}\n                    </td>\n                    <td>Dividend Yield : P/E Ratio: {ratio.peRatioTTM}</td>\n                    <td>Dividend Yield : PEG Ratio: {ratio.pegRatioTTM}</td>\n                    <td>Dividend Yield : PEG Ratio: {ratio.pegRatioTTM}</td>\n                  </tr>\n                  <tr>\n                    <td>Payout Ratio: {ratio.payoutRatioTTM}</td>\n                    <td>Current Ratio {ratio.currentRatioTTM}</td>\n                    <td>Quick Ratio: {ratio.quickRatioTTM}</td>\n                    <td>\n                      Days of Sales Outstanding:{\" \"}\n                      {ratio.daysOfSalesOutstandingTTM}\n                    </td>\n                    <td>\n                      Days of Sales Outstanding:{\" \"}\n                      {ratio.daysOfSalesOutstandingTTM}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      Days of Sales Outstanding:{\" \"}\n                      {ratio.daysOfSalesOutstandingTTM}\n                    </td>\n                    <td>Cash Ratio: {ratio.cashRatioTTM}</td>\n                    <td>\n                      Days of inventory Outstanding:\n                      {ratio.daysOfInventoryOutstandingTTM}\n                    </td>\n                    <td>Operating Cycle: {ratio.operatingCycleTTM}</td>\n                    <td>\n                      Days of Payable Outstanding{\" \"}\n                      {ratio.daysOfPayablesOutstandingTTM}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      Cash conversion cycle {ratio.cashConversionCycleTTM}\n                    </td>\n                    <td>Gross profit margin: {ratio.grossProfitMarginTTM}</td>\n                    <td>\n                      Operating profit margin: {ratio.operatingProfitMarginTTM}\n                    </td>\n                    <td>\n                      Pre tax profit margin: {ratio.pretaxProfitMarginTTM}\n                    </td>\n                    <td>Net profit margin: {ratio.netProfitMarginTTM}</td>\n                  </tr>\n                  <tr>\n                    <td>Effective tax rate: {ratio.effectiveTaxRateTTM}</td>\n                    <td>Return on assets: {ratio.returnOnAssetsTTM}</td>\n                    <td>Return on equity {ratio.returnOnEquityTTM}</td>\n                    <td>\n                      Return on capital employed:{\" \"}\n                      {ratio.returnOnCapitalEmployedTTM}\n                    </td>\n                    <td>Net income per EBT: {ratio.netIncomePerEBTTTM}</td>\n                  </tr>\n                  <tr>\n                    <td>EBT per EBIT: {ratio.ebtPerEbitTTM}</td>\n                    <td>EBIT per Revenue: {ratio.ebitPerRevenueTTM}</td>\n                    <td>Debt ratio: {ratio.debtRatioTTM}</td>\n                    <td>Debt equity ratio: {ratio.debtEquityRatioTTM}</td>\n                    <td>\n                      Total debt to capitalization:\n                      {ratio.totalDebtToCapitalizationTTM}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Interest Coverage: {ratio.interestCoverageTTM}</td>\n                    <td>\n                      Cashflow to debt ratio: {ratio.cashFlowToDebtRatioTTM}\n                    </td>\n                    <td>\n                      Company equity mutliplier:{\" \"}\n                      {ratio.companyEquityMultiplierTTM}\n                    </td>\n                    <td>\n                      Receibables turnover: {ratio.receivablesTurnoverTTM}\n                    </td>\n                    <td>Payables turnover: {ratio.payablesTurnoverTTM}</td>\n                  </tr>\n                  <tr>\n                    <td>Invetory turnover: {ratio.inventoryTurnoverTTM}</td>\n                    <td>Fixed assets turnover {ratio.fixedAssetTurnoverTTM}</td>\n                    <td>Assets turnover {ratio.assetTurnoverTTM}</td>\n                    <td>\n                      Operating cash flow per share\n                      {ratio.operatingCashFlowPerShareTTM}\n                    </td>\n                    <td>\n                      Free cashflow operating cashflow ratio:\n                      {ratio.freeCashFlowOperatingCashFlowRatioTTM}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Cash per share: {ratio.cashPerShareTTM}</td>\n                    <td>\n                      Operating cash flow sales ratio:\n                      {ratio.operatingCashFlowSalesRatioTTM}\n                    </td>\n                    <td>\n                      Free cashflow per share: {ratio.freeCashFlowPerShareTTM}\n                    </td>\n                    <td>\n                      Operating cashflow sales ratio:\n                      {ratio.operatingCashFlowSalesRatioTTM}\n                    </td>\n                    <td>\n                      Free cashflow operating cash flow ratio:\n                      {ratio.freeCashFlowOperatingCashFlowRatioTTM}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      Cash flow coverage ratios:{\" \"}\n                      {ratio.cashFlowCoverageRatiosTTM}\n                    </td>\n                    <td>\n                      Short term coverage ratios:{\" \"}\n                      {ratio.shortTermCoverageRatiosTTM}\n                    </td>\n                    <td>\n                      Capital expenditure coverage ratio:\n                      {ratio.capitalExpenditureCoverageRatioTTM}\n                    </td>\n                    <td>\n                      Dividend paid and capex coverage ratio:\n                      {ratio.dividendPaidAndCapexCoverageRatioTTM}\n                    </td>\n                    <td>\n                      Price book value ratio: {ratio.priceBookValueRatioTTM}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Price to book ratio: {ratio.priceToBookRatioTTM}</td>\n                    <td>Price to sales ratio: {ratio.priceToSalesRatioTTM}</td>\n                    <td>Price earnings ratio: {ratio.priceEarningsRatioTTM}</td>\n                    <td>\n                      Price to free cashflow ratio:\n                      {ratio.priceToFreeCashFlowsRatioTTM}\n                    </td>\n                    <td>\n                      Price to operating cashflows ratio:\n                      {ratio.priceToOperatingCashFlowsRatioTTM}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Price cashflow ratio: {ratio.priceCashFlowRatioTTM}</td>\n                    <td>\n                      Price earings to growth ratio:{\" \"}\n                      {ratio.priceEarningsToGrowthRatioTTM}{\" \"}\n                    </td>\n                    <td>Price sales ratio: {ratio.priceSalesRatioTTM}</td>\n                    <td>Dividend yield: {ratio.dividendYieldTTM}</td>\n                    <td>\n                      Enterprise value mutliplier:{\" \"}\n                      {ratio.enterpriseValueMultipleTTM}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Price fair value: {ratio.priceFairValueTTM}</td>\n                    <td>Dividend per share: {ratio.dividendPerShareTTM}</td>\n                    <td>Dividend yield: {ratio.dividendYieldTTM}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\n//\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Stocks } from \"../Financials/Stocks\";\nimport { BalanceSheet } from \"../Financials/BalanceSheet\";\nimport { CashFlow } from \"../Financials/CashFlow\";\nimport { IncomeStatement } from \"../Financials/IncomeStatement\";\nimport News from \"../News/News\";\nimport ChartLine from \"../Charts/ChartLine\";\nimport { RevenueEarning } from \"../Charts/RevenueEarning\";\nimport { StockNews } from \"../News/StockNews\";\nimport { Ratio } from \"../Financials/Ratios\";\nexport const RoutesComponent = () => {\n  return (\n    <>\n      <Routes>\n        <Route exact path=\"/\" element={<News />}></Route>\n        <Route path=\"news\" element={<News />} />\n        <Route path=\"stocks\" element={<Stocks />}>\n          <Route path=\"/stocks\" element={<StockNews />} />\n          <Route path=\"news\" element={<StockNews />} />\n          <Route path=\"cashflow\" element={<CashFlow />} />\n          <Route path=\"incomestatement\" element={<IncomeStatement />} />\n          <Route path=\"balancesheet\" element={<BalanceSheet />} />\n          <Route path=\"chart\" element={<ChartLine />} />\n          <Route path=\"revenue\" element={<RevenueEarning />} />\n          <Route path=\"ratio\" element={<Ratio />} />\n        </Route>\n      </Routes>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./css/App.css\";\nimport News from \"../src/News/News\";\nimport ChartLine from \"./Charts/ChartLine\";\nimport { Context } from \"./Context/Context\";\nimport { RevenueEarning } from \"./Charts/RevenueEarning\";\nimport { Recommendation } from \"./Financials/Recommendation\";\nimport { CashFlow } from \"./Financials/IncomeStatement\";\nimport { BrowseBar } from \"./Financials/BrowseBar\";\nimport { BrowseFinancial } from \"./NavBar/BrowseFinancial\";\nimport InputForm from \"../src/InputForm/InputForm\";\n// import { Search } from \"./Search/Search\";\nimport { NavBar } from \"./NavBar/NavBar\";\nimport { Banner } from \"./Banner/Banner\";\nimport { MergerNews } from \"./News/MergerNews\";\nimport { Stocks } from \"./Financials/Stocks\";\nimport { Outlet } from \"react-router-dom\";\nimport { RoutesComponent } from \"./Router/RoutesComponent\";\nfunction App() {\n  const [context, setContext] = useState(\"AAPL\");\n  return (\n    <div className=\"App\">\n      <Context.Provider value={[context, setContext]}>\n        <Banner></Banner>\n        <NavBar></NavBar>\n        {/* <Search></Search> */}\n        {/* <MergerNews></MergerNews> */}\n        {/* <InputForm></InputForm> */}\n        {/* <BrowseBar></BrowseBar> */}\n        {/* <ChartLine></ChartLine> */}\n        {/* <RevenueEarning></RevenueEarning> */}\n        {/* <Recommendation></Recommendation> */}\n        {/* <StockScreener></StockScreener> */}\n        {/* <News></News> */}\n        <RoutesComponent></RoutesComponent>\n      </Context.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}