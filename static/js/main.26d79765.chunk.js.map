{"version":3,"sources":["apikey/apikey.js","News/News.js","Context/Context.js","Financials/BasicInfo.js","Charts/ChartLine.js","Charts/RevenueEarning.js","Financials/BalanceSheet.js","Financials/IncomeStatement.js","NavBar/NavBar.js","Banner/Banner.js","Search/Search.js","Financials/StocksNavBar.js","Financials/Stocks.js","Financials/CashFlow.js","News/StockNews.js","Financials/Ratios.js","Router/RoutesComponent.js","App.js","index.js"],"names":["financialmodelingprepApikey","finnhubApikey","News","props","_useState","useState","category","headline","image","source","summary","url","_useState2","Object","slicedToArray","news","setNews","_fetchNews","asyncToGenerator","regenerator_default","a","mark","_callee","res","data","news1","news2","news3","news4","_ref","wrap","_context","prev","next","fetch","concat","sent","json","stop","apply","this","arguments","useEffect","fetchNews","react_default","createElement","Fragment","style","marginTop","className","src","width","height","textAlign","color","Context","React","createContext","BasicInfo","_useContext","useContext","context","open","current","change","high","low","previousClose","price","setPrice","_fetchOcPrice","o","toFixed","c","dp","h","l","pc","fetchOcPrice","console","log","ChartLine","_useContext2","info","setInfo","_useState3","_useState4","date","setDate","_fetchChartMonth","HistoricalData","historical","t0","stockPrice","slice","reverse","map","close","stockDate","abrupt","fetchChartMonth","id","name","onChange","e","target","value","marginLeft","index_modern","labels","datasets","label","fill","borderColor","tension","options","plugins","zoom","wheel","enabled","mode","speed","modifierKey","pan","threshold","pinch","BasicInfo_BasicInfo","Chart","register","zoomPlugin","RevenueEarning","revenue","fetchData","setFetchData","_fetchRevenueEarningYear","element","fetchRevenueEarningYear","backgroundColor","responsive","divider","checkNumbers","attribute","constant","undefined","Number","BalanceSheet","liabilitiesandstockholdersequity","liabilities","liabilitiescurrent","commonstocksharesauthorized","cashandcashequivalentsatcarryingvalue","retainedearningsaccumulateddeficit","liabilitiesnoncurrent","propertyplantandequipmentnet","commonstocksincludingadditionalpaidincapital","commercialpaper","longtermdebtcurrent","commonstocksharesoutstanding","otherliabilitiesnoncurrent","marketablesecuritiescurrent","otherliabilitiescurrent","assetscurrent","longtermdebtnoncurrent","contractwithcustomerliabilitycurrent","nontradereceivablescurrent","commonstocksharesissued","stockholdersequity","accountsreceivablenetcurrent","accountspayablecurrent","assets","assetsnoncurrent","otherassetscurrent","otherassetsnoncurrent","inventorynet","marketablesecuritiesnoncurrent","accumulatedothercomprehensiveincomelossnetoftax","dataInfo","setDataInfo","_fetchBalanceSheet","fetchBalanceSheet","item","IncomeStatement","costofgoodsandservicessold","netincomeloss","researchanddevelopmentexpense","grossprofit","othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax","othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax","othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax","weightedaveragenumberofdilutedsharesoutstanding","weightedaveragenumberofsharesoutstandingbasic","operatingincomeloss","nonoperatingincomeexpense","incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest","othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax","earningspersharebasic","incometaxexpensebenefit","othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax","revenuefromcontractwithcustomerexcludingassessedtax","earningspersharediluted","operatingexpenses","othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax","sellinggeneralandadministrativeexpense","othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax","othercomprehensiveincomelossnetoftaxportionattributabletoparent","comprehensiveincomenetoftax","_fetchCashFlow","fetchCashFlow","NaN","NavBar","react_router_dom","to","Banner","Search","setValue","setContext","maxLength","required","autoFocus","placeholder","type","borderWidth","outline","toUpperCase","borderStyle","onClick","index_es","icon","faSearch","StocksNavBar","react_router","Stocks","Search_Search","StocksNavBar_StocksNavBar","CashFlow","netIncome","depreciationAndAmortization","deferredIncomeTax","stockBasedCompensation","changeInWorkingCapital","accountsReceivables","inventory","accountsPayables","otherWorkingCapital","otherNonCashItems","netCashProvidedByOperatingActivities","investmentsInPropertyPlantAndEquipment","acquisitionsNet","purchasesOfInvestments","salesMaturitiesOfInvestments","otherInvestingActivites","netCashUsedForInvestingActivites","debtRepayment","commonStockIssued","commonStockRepurchased","dividendsPaid","otherFinancingActivites","netCashUsedProvidedByFinancingActivities","effectOfForexChangesOnCash","netChangeInCash","cashAtEndOfPeriod","cashAtBeginningOfPeriod","operatingCashFlow","capitalExpenditure","freeCashFlow","_fetchIncomeStatement","fetchIncomeStatement","key","StockNews","_fetchStockNews","headline1","headline2","headline3","headline4","image1","image2","image3","image4","summary1","summary2","summary3","summary4","fetchStockNews","margin","Ratio","dividendYielTTM","dividendYielPercentageTTM","peRatioTTM","pegRatioTTM","payoutRatioTTM","currentRatioTTM","quickRatioTTM","cashRatioTTM","daysOfSalesOutstandingTTM","daysOfInventoryOutstandingTTM","operatingCycleTTM","daysOfPayablesOutstandingTTM","cashConversionCycleTTM","grossProfitMarginTTM","operatingProfitMarginTTM","pretaxProfitMarginTTM","netProfitMarginTTM","effectiveTaxRateTTM","returnOnAssetsTTM","returnOnEquityTTM","returnOnCapitalEmployedTTM","netIncomePerEBTTTM","ebtPerEbitTTM","ebitPerRevenueTTM","debtRatioTTM","debtEquityRatioTTM","longTermDebtToCapitalizationTTM","totalDebtToCapitalizationTTM","interestCoverageTTM","cashFlowToDebtRatioTTM","companyEquityMultiplierTTM","receivablesTurnoverTTM","payablesTurnoverTTM","inventoryTurnoverTTM","fixedAssetTurnoverTTM","assetTurnoverTTM","operatingCashFlowPerShareTTM","freeCashFlowPerShareTTM","cashPerShareTTM","operatingCashFlowSalesRatioTTM","freeCashFlowOperatingCashFlowRatioTTM","cashFlowCoverageRatiosTTM","shortTermCoverageRatiosTTM","capitalExpenditureCoverageRatioTTM","dividendPaidAndCapexCoverageRatioTTM","priceBookValueRatioTTM","priceToBookRatioTTM","priceToSalesRatioTTM","priceEarningsRatioTTM","priceToFreeCashFlowsRatioTTM","priceToOperatingCashFlowsRatioTTM","priceCashFlowRatioTTM","priceEarningsToGrowthRatioTTM","priceSalesRatioTTM","dividendYieldTTM","enterpriseValueMultipleTTM","priceFairValueTTM","dividendPerShareTTM","ratio","setRatio","_fetchRatio","fetchRatio","RoutesComponent","exact","path","Stocks_Stocks","StockNews_StockNews","CashFlow_CashFlow","IncomeStatement_IncomeStatement","BalanceSheet_BalanceSheet","RevenueEarning_RevenueEarning","Ratios_Ratio","App","Provider","Banner_Banner","NavBar_NavBar","RoutesComponent_RoutesComponent","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.26d79765.chunk.js","sourcesContent":["export const financialmodelingprepApikey = \"27e30c366f6b2d5ccd0915478fe5bd68\";\nexport const finnhubApikey = \"c7eaef2ad3ifpe0p8dkg\";\nexport const alphavantage = \"5IFEHJ4BEBK4FA78\";\n","// A Component that displays news about the market\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { finnhubApikey } from \"../apikey/apikey\";\n\nexport default function News(props) {\n  const [news, setNews] = useState({\n    category: \"\",\n    headline: \"\",\n    image: \"\",\n    source: \"\",\n    summary: \"\",\n    url: \"\",\n  });\n  async function fetchNews() {\n    const res = await fetch(\n      `https://finnhub.io/api/v1/news?category=general&token=${finnhubApikey}`\n    );\n    const data = await res.json();\n    let news1, news2, news3, news4;\n    [news1, news2, news3, news4] = [data[0], data[1], data[2], data[3]];\n\n    setNews({\n      category: {\n        news1: news1.category,\n        news2: news2.category,\n        news3: news3.category,\n        news4: news4.category,\n      },\n      headline: {\n        news1: news1.headline,\n        news2: news2.headline,\n        news3: news3.headline,\n        news4: news4.headline,\n      },\n      image: {\n        news1: news1.image,\n        news2: news2.image,\n        news3: news3.image,\n        news4: news4.image,\n      },\n      source: {\n        news1: news1.source,\n        news2: news2.source,\n        news3: news3.source,\n        news4: news4.source,\n      },\n      summary: {\n        news1: news1.summary,\n        news2: news2.summary,\n        news3: news3.summary,\n        news4: news4.summary,\n      },\n      url: {\n        news1: news1.url,\n        news2: news2.url,\n        news3: news3.url,\n        news4: news4.url,\n      },\n    });\n  }\n  useEffect(() => {\n    fetchNews();\n  }, []);\n  return (\n    <>\n      <div style={{ marginTop: \"50px\" }}>\n        {\" \"}\n        {news.headline.news1}\n        <div> {news.source.news1}</div>\n      </div>\n      <div className=\"News\">\n        <div className=\"NewsBorder\">\n          <img src={news.image.news1} width=\"500\" height=\"366\" />\n        </div>\n\n        <div className=\"NewsBorderSide\">\n          <img src={news.image.news2} width=\"100\" height=\"100\"></img>\n          <div style={{ textAlign: \"center\" }}>\n            {news.headline.news2 + \" \"}{\" \"}\n            <div style={{ marginTop: \"10px\", color: \"gray\" }}>\n              {\" \"}\n              {news.source.news2}\n            </div>\n          </div>\n          <img src={news.image.news3} width=\"100\" height=\"100\"></img>\n          <div style={{ textAlign: \"center\" }}>\n            {\" \"}\n            {news.headline.news2}\n            <div style={{ marginTop: \"10px\", color: \"gray\" }}>\n              {\" \"}\n              {news.source.news3}\n            </div>\n          </div>\n          <img\n            src={news.image.news4 + \" \"}\n            width=\"100\"\n            height=\"100\"\n            style={{ marginTop: \"100x\", color: \"gray\" }}\n          ></img>\n          <div style={{ textAlign: \"center\" }}>\n            {news.headline.news4 + \" \"}\n            <div style={{ marginTop: \"10px\", color: \"gray\" }}>\n              {\" \"}\n              {news.source.news4}{\" \"}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport const Context = React.createContext();\n// Creates a Context Component\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { finnhubApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\nexport const BasicInfo = () => {\n  const [context] = useContext(Context);\n  const [price, setPrice] = useState({\n    open: \"\",\n    current: \"\",\n    change: \"\",\n    high: \"\",\n    low: \"\",\n    previousClose: \"\",\n  });\n  async function fetchOcPrice() {\n    const res = await fetch(\n      `https://finnhub.io/api/v1/quote?symbol=${context}&token=${finnhubApikey}`\n    );\n    const data = await res.json();\n    setPrice({\n      open: data.o.toFixed(2),\n      current: data.c.toFixed(2),\n      change: data.dp.toFixed(2),\n      high: data.h.toFixed(2),\n      low: data.l.toFixed(2),\n      previousClose: data.pc.toFixed(2),\n    });\n  }\n  useEffect(() => {\n    fetchOcPrice();\n  }, []);\n  console.log(price.open);\n  return (\n    <div>\n      <ul>\n        <li> Open price : {price.open}</li>\n        <li> Current price : {price.current}</li>\n        <li> Percent change : {price.change + \" \" + \"%\"}</li>\n        <li> Day highest price :{price.high}</li>\n        <li> Day lowest price : {price.low}</li>\n        <li> Previous close price : {price.previousClose}</li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Chart from \"chart.js/auto\";\nimport { Context } from \"../Context/Context\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport * as zoom from \"chartjs-plugin-zoom\";\nimport zoomPlugin from \"chartjs-plugin-zoom\";\nimport hammer from \"hammerjs\";\nimport { BasicInfo } from \"../Financials/BasicInfo\";\n\nChart.register(zoomPlugin);\n// import { zoom } from \"chartjs-plugin-zoom\";\n// Importing Hooks, Context, API key, and Chart\n//\n//\n\nexport default function ChartLine() {\n  const [context, setContext] = useContext(Context);\n  const [info, setInfo] = useState({});\n  const [date, setDate] = useState(\"Week\");\n  async function fetchChartMonth() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/historical-price-full/${context}?serietype=line&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    // fetching some data from financial modeling API\n    const HistoricalData = data.historical;\n    switch (date) {\n      case \"Week\":\n        setInfo({\n          stockPrice: HistoricalData.slice(0, 8)\n            .reverse()\n            .map((price) => {\n              return price.close;\n            }),\n          stockDate: HistoricalData.slice(0, 8)\n            .reverse()\n            .map((date) => {\n              return date.date;\n            }),\n        });\n        break;\n      case \"Month\":\n        setInfo({\n          stockPrice: HistoricalData.slice(0, 31)\n            .reverse()\n            .map((price) => {\n              return price.close;\n            }),\n          stockDate: HistoricalData.slice(0, 31)\n            .reverse()\n            .map((date) => {\n              return date.date;\n            }),\n        });\n        break;\n      case \"Year\":\n        setInfo({\n          stockPrice: HistoricalData.slice(0, 366)\n            .reverse()\n            .map((price) => {\n              return price.close;\n            }),\n          stockDate: HistoricalData.slice(0, 366)\n            .reverse()\n            .map((date) => {\n              return date.date;\n            }),\n        });\n        break;\n      case \"Max\":\n        setInfo({\n          stockPrice: HistoricalData.reverse().map((price) => {\n            return price.close;\n          }),\n          stockDate: HistoricalData.map((date) => {\n            return date.date;\n          }),\n        });\n    }\n    // Checks if the user select to see a Line Chart for a year/month/week and displays the asking info\n    //\n  }\n\n  useEffect(() => {\n    fetchChartMonth();\n  }, [date, context]);\n  // using useEffect to fetch the API only when date or context changes\n\n  const handleChange = (e) => {\n    setDate(e.target.value);\n  };\n  // handleChange function sets the date according to what the user selects\n  return (\n    //selection field\n    <div>\n      <select\n        id=\"cars\"\n        name=\"cars\"\n        onChange={handleChange}\n        style={{ marginLeft: \"100px\" }}\n      >\n        <option value=\"Week\">Week</option>\n        <option value=\"Month\">Month</option>\n        <option value=\"Year\">Year</option>\n        <option value=\"Max\">Max</option>\n      </select>\n      <div className=\"ChartLine\">\n        <Line // Line Chart\n          data={{\n            labels: info.stockDate,\n            datasets: [\n              {\n                label: `${context} Price:`, // Displays the the value the user Typed\n                data: info.stockPrice, // Displays the stock price's\n                fill: true,\n                borderColor: \"rgb(75,192,192)\",\n                tension: 0.1,\n              },\n            ],\n          }}\n          options={{\n            plugins: {\n              zoom: {\n                zoom: {\n                  wheel: {\n                    enabled: true, // SET SCROOL ZOOM TO TRUE\n                  },\n                  mode: \"y\",\n                  speed: 0.2,\n                  modifierKey: \"shift\",\n                },\n                pan: {\n                  enabled: true,\n                  mode: \"xy\",\n                  threshold: 1,\n                },\n                pinch: {\n                  enabled: true,\n                },\n                mode: \"xy\",\n              },\n            },\n          }}\n        ></Line>\n        <BasicInfo></BasicInfo>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\n// import Chart from \"chart.js/auto\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Context } from \"../Context/Context\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\n\n//Imports Hooks, Bar Chart, Context and API key\nexport const RevenueEarning = () => {\n  const [context, setContext] = useContext(Context);\n  const [fetchData, setFetchData] = useState({\n    revenue: \"\",\n    date: \"\",\n  });\n  async function fetchRevenueEarningYear() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/income-statement/${context}?limit=120&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    //fetch data from financial modeling API\n    //\n    setFetchData({\n      revenue: data\n        .slice(0, 4)\n        .map((element) => element.revenue.toFixed(1) / 1000000)\n        .reverse(),\n      date: data\n        .slice(0, 4)\n        .map((element) => element.date.slice(0, 4))\n        .reverse(),\n    });\n    // Sets the state for date and revenue. Date is always for 4 years and revenue is to Millions\n    //\n  }\n  useEffect(() => {\n    fetchRevenueEarningYear();\n  }, [context]);\n  // Fetch only if the context change\n\n  const options = {\n    responsive: true,\n  };\n  const labels = fetchData.date;\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: `${context} Revenue to Millions`,\n        data: fetchData.revenue,\n        backgroundColor: \"rgba(255,99,132,0.5)\",\n      },\n    ],\n  };\n\n  return (\n    // Bar Chart\n    <div className=\"Revenue\">\n      <Bar options={options} data={data} />\n    </div>\n  );\n};\n","// A Component that has data tables for a stock's Balance sheet\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\n// Importing Hooks, Context and API key\nexport const divider = 1000000;\nexport const checkNumbers = (attribute, constant) => {\n  if (attribute === undefined) {\n    return (attribute = \"-\");\n  } else if (attribute === !Number) {\n    return attribute;\n  } else if (constant) {\n    return attribute / constant;\n  } else {\n    return attribute;\n  }\n};\nexport const BalanceSheet = () => {\n  const [context] = useContext(Context);\n  const [dataInfo, setDataInfo] = useState({\n    date: [],\n    liabilitiesandstockholdersequity: [],\n    liabilities: [],\n    liabilitiescurrent: [],\n    commonstocksharesauthorized: [],\n    cashandcashequivalentsatcarryingvalue: [],\n    retainedearningsaccumulateddeficit: [],\n    liabilitiesnoncurrent: [],\n    propertyplantandequipmentnet: [],\n    commonstocksincludingadditionalpaidincapital: [],\n    commercialpaper: [],\n    longtermdebtcurrent: [],\n    commonstocksharesoutstanding: [],\n    otherliabilitiesnoncurrent: [],\n    marketablesecuritiescurrent: [],\n    otherliabilitiescurrent: [],\n    assetscurrent: [],\n    longtermdebtnoncurrent: [],\n    contractwithcustomerliabilitycurrent: [],\n    nontradereceivablescurrent: [],\n    commonstocksharesissued: [],\n    stockholdersequity: [],\n    accountsreceivablenetcurrent: [],\n    accountspayablecurrent: [],\n    assets: [],\n    assetsnoncurrent: [],\n    otherassetscurrent: [],\n    otherassetsnoncurrent: [],\n    inventorynet: [],\n    marketablesecuritiesnoncurrent: [],\n    accumulatedothercomprehensiveincomelossnetoftax: [],\n  });\n  //Initialize some data that we will need to add when we fetch the API\n  //\n\n  async function fetchBalanceSheet() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/balance-sheet-statement-as-reported/${context}?limit=10&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    // fetch financial model API\n    //\n    //\n    console.log(typeof data.date);\n    // Function\n    setDataInfo({\n      date: data\n        .map((element) => checkNumbers(element.date))\n        .slice(0, 4)\n        .reverse(),\n      //\n      liabilitiesandstockholdersequity: data\n        .map((element) =>\n          checkNumbers(element.liabilitiesandstockholdersequity, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n\n      //\n      liabilities: data\n        .map((element) => checkNumbers(element.liabilities, divider))\n        .slice(0, 4)\n        .reverse(),\n      liabilitiescurrent: data\n        .map((element) => checkNumbers(element.liabilitiescurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      commonstocksharesauthorized: data\n        .map((element) =>\n          checkNumbers(element.commonstocksharesauthorized, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      cashandcashequivalentsatcarryingvalue: data\n        .map((element) =>\n          checkNumbers(element.cashandcashequivalentsatcarryingvalue, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      retainedearningsaccumulateddeficit: data\n        .map((element) =>\n          checkNumbers(element.retainedearningsaccumulateddeficit, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      liabilitiesnoncurrent: data\n        .map((element) => checkNumbers(element.liabilitiesnoncurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      propertyplantandequipmentnet: data\n        .map((element) =>\n          checkNumbers(element.propertyplantandequipmentnet, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      commonstocksincludingadditionalpaidincapital: data\n        .map((element) =>\n          checkNumbers(\n            element.commonstocksincludingadditionalpaidincapital,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      commercialpaper: data\n        .map((element) => checkNumbers(element.commercialpaper, divider))\n        .slice(0, 4)\n        .reverse(),\n      longtermdebtcurrent: data\n        .map((element) => checkNumbers(element.longtermdebtcurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      commonstocksharesoutstanding: data\n        .map((element) =>\n          checkNumbers(element.commonstocksharesoutstanding, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      otherliabilitiesnoncurrent: data\n        .map((element) =>\n          checkNumbers(element.otherliabilitiesnoncurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      marketablesecuritiescurrent: data\n        .map((element) =>\n          checkNumbers(element.marketablesecuritiescurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      otherliabilitiescurrent: data\n        .map((element) =>\n          checkNumbers(element.otherliabilitiescurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      assetscurrent: data\n        .map((element) => checkNumbers(element.assetscurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      longtermdebtnoncurrent: data\n        .map((element) => checkNumbers(element.longtermdebtnoncurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      contractwithcustomerliabilitycurrent: data\n        .map((element) =>\n          checkNumbers(element.contractwithcustomerliabilitycurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      nontradereceivablescurrent: data\n        .map((element) =>\n          checkNumbers(element.nontradereceivablescurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      commonstocksharesissued: data\n        .map((element) =>\n          checkNumbers(element.commonstocksharesissued, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      stockholdersequity: data\n        .map((element) => checkNumbers(element.stockholdersequity, divider))\n        .slice(0, 4)\n        .reverse(),\n      accountsreceivablenetcurrent: data\n        .map((element) =>\n          checkNumbers(element.accountsreceivablenetcurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      accountspayablecurrent: data\n        .map((element) => checkNumbers(element.accountspayablecurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      assets: data\n        .map((element) => checkNumbers(element.assets, divider))\n        .slice(0, 4)\n        .reverse(),\n      assetsnoncurrent: data\n        .map((element) => checkNumbers(element.assetsnoncurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      otherassetscurrent: data\n        .map((element) => checkNumbers(element.otherassetscurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      otherassetsnoncurrent: data\n        .map((element) => checkNumbers(element.otherassetsnoncurrent, divider))\n        .slice(0, 4)\n        .reverse(),\n      inventorynet: data\n        .map((element) => checkNumbers(element.inventorynet, divider))\n        .slice(0, 4)\n        .reverse(),\n      marketablesecuritiesnoncurrent: data\n        .map((element) =>\n          checkNumbers(element.marketablesecuritiesnoncurrent, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      accumulatedothercomprehensiveincomelossnetoftax: data\n        .map((element) =>\n          checkNumbers(\n            element.accumulatedothercomprehensiveincomelossnetoftax,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n    });\n  }\n  useEffect(() => {\n    fetchBalanceSheet();\n  }, [context]);\n  return (\n    <div>\n      <h1> Balance Sheet</h1>\n      <table>\n        <tbody>\n          <tr>\n            <th>About</th>\n            {dataInfo.date.map((item) => (\n              <th>{item}</th>\n            ))}\n          </tr>\n          <tr>\n            <td> Liabilities and Stockholders Equity</td>\n            {dataInfo.liabilitiesandstockholdersequity.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Liabilities</td>\n            {dataInfo.liabilities.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Liabilities Current</td>\n            {dataInfo.liabilitiescurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common Stock Shares Authorized</td>\n            {dataInfo.commonstocksharesauthorized.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Cash and Cash Equivalents at carry ingvalue</td>\n            {dataInfo.cashandcashequivalentsatcarryingvalue.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Retained earnings accumulated deficit</td>\n            {dataInfo.retainedearningsaccumulateddeficit.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Liabilities non-current</td>\n            {dataInfo.liabilitiesnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Cost of goods and services sold</td>\n            {dataInfo.liabilitiesnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Property Plant and Equipment Net</td>\n            {dataInfo.propertyplantandequipmentnet.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common stocks Including additional paid in capital</td>\n            {dataInfo.commonstocksincludingadditionalpaidincapital.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td> Long Term Debt Current </td>\n            {dataInfo.longtermdebtcurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common Stock Shares Outstanding </td>\n            {dataInfo.commonstocksharesoutstanding.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Liabilities Non-current </td>\n            {dataInfo.otherliabilitiesnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Marketable Securities Current </td>\n            {dataInfo.marketablesecuritiescurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Liabilities Current </td>\n            {dataInfo.otherliabilitiescurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Assets Current </td>\n            {dataInfo.assetscurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Long Term Debt Non-Current </td>\n            {dataInfo.longtermdebtnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Contract with Customer Liability Current </td>\n            {dataInfo.contractwithcustomerliabilitycurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Non-Trade Receivables Current </td>\n            {dataInfo.nontradereceivablescurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common Stock Shares Issued </td>\n            {dataInfo.commonstocksharesissued.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Stock Holders Equity </td>\n            {dataInfo.stockholdersequity.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Accounts Receivable Net Current </td>\n            {dataInfo.accountsreceivablenetcurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Accounts Payable Current </td>\n            {dataInfo.accountspayablecurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Assets </td>\n            {dataInfo.assets.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Assets Non-Current </td>\n            {dataInfo.assetsnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Assets Non-Current </td>\n            {dataInfo.otherassetsnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Inventory Net </td>\n            {dataInfo.inventorynet.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Marketable Securities Non-Current </td>\n            {dataInfo.marketablesecuritiesnoncurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Accumulated Other Comprehensive Income Loss Net of Tax </td>\n            {dataInfo.accumulatedothercomprehensiveincomelossnetoftax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td> Other Assets Current </td>\n            {dataInfo.otherassetscurrent.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context/Context\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport { divider } from \"./BalanceSheet\";\nimport { checkNumbers } from \"./BalanceSheet\";\n\nexport const IncomeStatement = () => {\n  const [context, setContext] = useContext(Context);\n  const [dataInfo, setDataInfo] = useState({\n    date: [],\n    costofgoodsandservicessold: [],\n    netincomeloss: [],\n    researchanddevelopmentexpense: [],\n    grossprofit: [],\n    othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax:\n      [],\n    othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax:\n      [],\n    othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax:\n      [],\n    weightedaveragenumberofdilutedsharesoutstanding: [],\n    weightedaveragenumberofsharesoutstandingbasic: [],\n    operatingincomeloss: [],\n    nonoperatingincomeexpense: [],\n    incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest:\n      [],\n    othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax:\n      [],\n    earningspersharebasic: [],\n    incometaxexpensebenefit: [],\n    othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax:\n      [],\n    revenuefromcontractwithcustomerexcludingassessedtax: [],\n    earningspersharediluted: [],\n    operatingexpenses: [],\n    othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax:\n      [],\n    sellinggeneralandadministrativeexpense: [],\n    othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax:\n      [],\n    othercomprehensiveincomelossnetoftaxportionattributabletoparent: [],\n    comprehensiveincomenetoftax: [],\n  });\n\n  async function fetchCashFlow() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/income-statement-as-reported/${context}?limit=10&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    setDataInfo({\n      date: data\n        .map((element) => checkNumbers(element.date))\n        .slice(0, 4)\n        .reverse(),\n      costofgoodsandservicessold: data\n        .map((element) =>\n          checkNumbers(element.costofgoodsandservicessold, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      netincomeloss: data\n        .map((element) => checkNumbers(element.netincomeloss, divider))\n        .slice(0, 4)\n        .reverse(),\n      researchanddevelopmentexpense: data\n        .map((element) =>\n          checkNumbers(element.researchanddevelopmentexpense, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      grossprofit: data\n        .map((element) => checkNumbers(element.grossprofit, divider))\n        .slice(0, 4)\n        .reverse(),\n      othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      othercomprehensiveincomelossderivativeinstrumentgainlossbeforereclassificationaftertax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      weightedaveragenumberofdilutedsharesoutstanding: data\n        .map((element) =>\n          checkNumbers(\n            element.weightedaveragenumberofdilutedsharesoutstanding,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      weightedaveragenumberofsharesoutstandingbasic: data\n        .map((element) =>\n          checkNumbers(\n            element.weightedaveragenumberofsharesoutstandingbasic,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      operatingincomeloss: data\n        .map((element) => checkNumbers(element.operatingincomeloss, divider))\n        .slice(0, 4)\n        .reverse(),\n      nonoperatingincomeexpense: data\n        .map((element) =>\n          checkNumbers(element.nonoperatingincomeexpense, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      earningspersharebasic: data\n        .map((element) => checkNumbers(element.earningspersharebasic))\n        .slice(0, 4)\n        .reverse(),\n      incometaxexpensebenefit: data\n        .map((element) =>\n          checkNumbers(element.incometaxexpensebenefit, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      revenuefromcontractwithcustomerexcludingassessedtax: data\n        .map((element) =>\n          checkNumbers(\n            element.revenuefromcontractwithcustomerexcludingassessedtax,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      earningspersharediluted: data\n        .map((element) => checkNumbers(element.earningspersharediluted))\n        .slice(0, 4)\n        .reverse(),\n      operatingexpenses: data\n        .map((element) => checkNumbers(element.operatingexpenses, divider))\n        .slice(0, 4)\n        .reverse(),\n      othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      sellinggeneralandadministrativeexpense: data\n        .map((element) =>\n          checkNumbers(element.sellinggeneralandadministrativeexpense, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax:\n        data\n          .map((element) =>\n            checkNumbers(\n              element.othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax,\n              divider\n            )\n          )\n          .slice(0, 4)\n          .reverse(),\n      othercomprehensiveincomelossnetoftaxportionattributabletoparent: data\n        .map((element) =>\n          checkNumbers(\n            element.othercomprehensiveincomelossnetoftaxportionattributabletoparent,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      comprehensiveincomenetoftax: data\n        .map((element) =>\n          checkNumbers(element.comprehensiveincomenetoftax, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n    });\n  }\n  useEffect(() => {\n    fetchCashFlow();\n  }, [context]);\n  return (\n    <div>\n      <h1> Income Statement </h1>\n      <h6> Numbers to Millions</h6>\n      <table id=\"simple-board\">\n        <tbody>\n          <tr>\n            <th>About</th>\n            {dataInfo.date.map((item) => (\n              <th>{item}</th>\n            ))}\n          </tr>\n          <tr>\n            <td> Cost of goods and services sold</td>\n            {dataInfo.costofgoodsandservicessold.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Income Loss</td>\n            {dataInfo.netincomeloss.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Research And Development Expense</td>\n            {dataInfo.researchanddevelopmentexpense.map((item) => (\n              <td> {item === \"\" ? \"N/A\" : item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Gross Profit </td>\n            {dataInfo.grossprofit.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Reclassification Adjustment From a\n              OCI for Sale of securities net of tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossreclassificationadjustmentfromaociforsaleofsecuritiesnetoftax.map(\n              (item) => (\n                <td> {item === NaN ? \"\" : item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Derivative Instrument Gain Loss\n              Before Reclassification After Tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax.map(\n              (item) => (\n                <td> {item == NaN ? \"\" : item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Foreign Currency Transaction And\n              Translation Adjustment Net of Tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossforeigncurrencytransactionandtranslationadjustmentnetoftax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Weighted Average Number Of Diluted Shares Outstanding</td>\n            {dataInfo.weightedaveragenumberofdilutedsharesoutstanding.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Weighted Average Number Of Shares Outstanding Basic</td>\n            {dataInfo.weightedaveragenumberofsharesoutstandingbasic.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Operating Income Loss</td>\n            {dataInfo.operatingincomeloss.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>Non-Operating Income Expense</td>\n            {dataInfo.nonoperatingincomeexpense.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>\n              Income Loss From Continuing Operations Before Income Taxes\n              Extraordinary Items Non-Controlling Interest\n            </td>\n            {dataInfo.incomelossfromcontinuingoperationsbeforeincometaxesextraordinaryitemsnoncontrollinginterest.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Available For Sale Securities\n              Adjustment Net of Tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossavailableforsalesecuritiesadjustmentnetoftax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Earnings per Share Basic</td>\n            {dataInfo.earningspersharebasic.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>Income Tax Expense Benefit</td>\n            {dataInfo.incometaxexpensebenefit.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Unrealized Holding Gain Loss On\n              Securities a Rising During Period Net of Tax\n            </td>\n            {dataInfo.othercomprehensiveincomeunrealizedholdinggainlossonsecuritiesarisingduringperiodnetoftax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Revenue From Contract With Customer Excluding Assessed Tax</td>\n            {dataInfo.revenuefromcontractwithcustomerexcludingassessedtax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Earnings per Share Diluted</td>\n            {dataInfo.earningspersharediluted.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>Operating Expenses</td>\n            {dataInfo.operatingexpenses.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Derivative Instrument Gain Loss\n              After Reclassification And Tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossderivativeinstrumentgainlossafterreclassificationandtax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Selling General And Admin Is Rative Expense</td>\n            {dataInfo.sellinggeneralandadministrativeexpense.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Derivative Instrument Gain Loss\n              Reclassification After Tax\n            </td>\n            {dataInfo.othercomprehensiveincomelossderivativeinstrumentgainlossreclassificationaftertax.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>\n              Other Comprehensive Income Loss Net of Tax Portion Attributable to\n              Parent\n            </td>\n            {dataInfo.othercomprehensiveincomelossnetoftaxportionattributabletoparent.map(\n              (item) => (\n                <td>{item}</td>\n              )\n            )}\n          </tr>\n          <tr>\n            <td>Comprehensive Income Net of Tax</td>\n            {dataInfo.comprehensiveincomenetoftax.map((item) => (\n              <td>{item}</td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const NavBar = () => {\n  return (\n    // <Outlet>\n    <div>\n      <div className=\"NavBar\">\n        <ul className=\"NavBarList\">\n          <NavLink to=\"news\" className=\"NavBarLi\">\n            Market News\n          </NavLink>\n          <NavLink to=\"stocks\" className=\"NavBarLi\">\n            Stocks\n          </NavLink>\n          <NavLink to=\"crypto\" className=\"NavBarLi\">\n            Crypto\n          </NavLink>\n        </ul>\n      </div>\n    </div>\n    // </Outlet>\n  );\n};\n","import React from \"react\";\nimport \"../css/App.css\";\nexport const Banner = () => {\n  return (\n    <div>\n      <div className=\"Banner\"> BULLMARKET WEB APP</div>\n    </div>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context/Context\";\nimport \"../css/App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/fontawesome-free-solid\";\n\nexport const Search = () => {\n  const [value, setValue] = useState();\n  const [context, setContext] = useContext(Context);\n  const Submit = () => {\n    setContext(value);\n  };\n  const handleChange = (e) => {\n    setValue(e.target.value.toUpperCase());\n  };\n\n  return (\n    <div>\n      <div className=\"Search\">\n        <input\n          maxLength={4}\n          required\n          autoFocus\n          placeholder=\"Search for stock symbols\"\n          type=\"text\"\n          style={{\n            height: \"25px\",\n            width: \"500px\",\n            borderColor: \"grey\",\n            borderWidth: \"1px\",\n            outline: \"none\",\n          }}\n          onChange={handleChange}\n        ></input>\n        <button\n          style={{\n            height: \"29px\",\n            width: \"100px\",\n            backgroundColor: \"#38f\",\n            borderStyle: \"none\",\n          }}\n          onClick={Submit}\n        >\n          <FontAwesomeIcon icon={faSearch} color=\"white\"></FontAwesomeIcon>\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nexport const StocksNavBar = () => {\n  return (\n    <>\n      <div>\n        <div>\n          <nav className=\"SearchBar\">\n            <NavLink to=\"news\" className=\"SearchBarLink\">\n              News\n            </NavLink>\n            <NavLink to=\"balancesheet\" className=\"SearchBarLink\">\n              BalanceSheet\n            </NavLink>\n            <NavLink to=\"incomestatement\" className=\"SearchBarLink\">\n              IncomeStatement\n            </NavLink>\n            <NavLink to=\"cashflow\" className=\"SearchBarLink\">\n              Cash Flow\n            </NavLink>\n            <NavLink to=\"revenue\" className=\"SearchBarLink\">\n              Revenue Chart\n            </NavLink>\n            <NavLink to=\"chart\" className=\"SearchBarLink\">\n              Price Chart\n            </NavLink>\n            <NavLink to=\"ratio\" className=\"SearchBarLink\">\n              Ratios\n            </NavLink>\n          </nav>\n        </div>\n        <Outlet></Outlet>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Search } from \"../Search/Search\";\nimport { StocksNavBar } from \"./StocksNavBar\";\n\nexport const Stocks = () => {\n  return (\n    <>\n      <Search></Search>\n      <StocksNavBar></StocksNavBar>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\nimport { checkNumbers } from \"./BalanceSheet\";\nimport { divider } from \"./BalanceSheet\";\nexport const CashFlow = () => {\n  const [context, setContext] = useContext(Context);\n  const [dataInfo, setDataInfo] = useState({\n    date: [],\n    netIncome: [],\n    netincomeloss: [],\n    depreciationAndAmortization: [],\n    deferredIncomeTax: [],\n    stockBasedCompensation: [],\n    changeInWorkingCapital: [],\n    accountsReceivables: [],\n    inventory: [],\n    accountsPayables: [],\n    otherWorkingCapital: [],\n    otherNonCashItems: [],\n    netCashProvidedByOperatingActivities: [],\n    investmentsInPropertyPlantAndEquipment: [],\n    acquisitionsNet: [],\n    purchasesOfInvestments: [],\n    salesMaturitiesOfInvestments: [],\n    otherInvestingActivites: [],\n    netCashUsedForInvestingActivites: [],\n    debtRepayment: [],\n    commonStockIssued: [],\n    commonStockRepurchased: [],\n    dividendsPaid: [],\n    otherFinancingActivites: [],\n    netCashUsedProvidedByFinancingActivities: [],\n    effectOfForexChangesOnCash: [],\n    netChangeInCash: [],\n    cashAtEndOfPeriod: [],\n    cashAtBeginningOfPeriod: [],\n    operatingCashFlow: [],\n    capitalExpenditure: [],\n    freeCashFlow: [],\n  });\n\n  async function fetchIncomeStatement() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/cash-flow-statement/${context}?limit=120&apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    setDataInfo({\n      date: data\n        .map((element) => checkNumbers(element.date))\n        .slice(0, 4)\n        .reverse(),\n      netIncome: data\n        .map((element) => checkNumbers(element.netIncome, divider))\n        .slice(0, 4)\n        .reverse(),\n      netincomeloss: data\n        .map((element) => checkNumbers(element.netincomeloss, divider))\n        .slice(0, 4)\n        .reverse(),\n      depreciationAndAmortization: data\n        .map((element) =>\n          checkNumbers(element.depreciationAndAmortization, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      deferredIncomeTax: data\n        .map((element) => checkNumbers(element.deferredIncomeTax, divider))\n        .slice(0, 4)\n        .reverse(),\n      stockBasedCompensation: data\n        .map((element) => checkNumbers(element.stockBasedCompensation, divider))\n        .slice(0, 4)\n        .reverse(),\n      changeInWorkingCapital: data\n        .map((element) => checkNumbers(element.changeInWorkingCapital, divider))\n        .slice(0, 4)\n        .reverse(),\n      accountsReceivables: data\n        .map((element) => checkNumbers(element.accountsReceivables, divider))\n        .slice(0, 4)\n        .reverse(),\n      inventory: data\n        .map((element) => checkNumbers(element.inventory, divider))\n        .slice(0, 4)\n        .reverse(),\n      accountsPayables: data\n        .map((element) => checkNumbers(element.accountsPayables, divider))\n        .slice(0, 4)\n        .reverse(),\n      otherWorkingCapital: data\n        .map((element) => checkNumbers(element.otherWorkingCapital, divider))\n        .slice(0, 4)\n        .reverse(),\n      otherNonCashItems: data\n        .map((element) => checkNumbers(element.otherNonCashItems, divider))\n        .slice(0, 4)\n        .reverse(),\n      netCashProvidedByOperatingActivities: data\n        .map((element) =>\n          checkNumbers(element.netCashProvidedByOperatingActivities, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      investmentsInPropertyPlantAndEquipment: data\n        .map((element) =>\n          checkNumbers(element.investmentsInPropertyPlantAndEquipment, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      acquisitionsNet: data\n        .map((element) => checkNumbers(element.acquisitionsNet, divider))\n        .slice(0, 4)\n        .reverse(),\n      purchasesOfInvestments: data\n        .map((element) => checkNumbers(element.purchasesOfInvestments, divider))\n        .slice(0, 4)\n        .reverse(),\n      salesMaturitiesOfInvestments: data\n        .map((element) =>\n          checkNumbers(element.salesMaturitiesOfInvestments, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      otherInvestingActivites: data\n        .map((element) =>\n          checkNumbers(element.otherInvestingActivites, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      netCashUsedForInvestingActivites: data\n        .map((element) =>\n          checkNumbers(element.netCashUsedForInvestingActivites, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      debtRepayment: data\n        .map((element) => checkNumbers(element.debtRepayment, divider))\n        .slice(0, 4)\n        .reverse(),\n      commonStockIssued: data\n        .map((element) => checkNumbers(element.commonStockIssued, divider))\n        .slice(0, 4)\n        .reverse(),\n      commonStockRepurchased: data\n        .map((element) => checkNumbers(element.commonStockRepurchased, divider))\n        .slice(0, 4)\n        .reverse(),\n      dividendsPaid: data\n        .map((element) => checkNumbers(element.dividendsPaid, divider))\n        .slice(0, 4)\n        .reverse(),\n      otherFinancingActivites: data\n        .map((element) =>\n          checkNumbers(element.otherFinancingActivites, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      netCashUsedProvidedByFinancingActivities: data\n        .map((element) =>\n          checkNumbers(\n            element.netCashUsedProvidedByFinancingActivities,\n            divider\n          )\n        )\n        .slice(0, 4)\n        .reverse(),\n      effectOfForexChangesOnCash: data\n        .map((element) =>\n          checkNumbers(element.effectOfForexChangesOnCash, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      netChangeInCash: data\n        .map((element) => checkNumbers(element.netChangeInCash, divider))\n        .slice(0, 4)\n        .reverse(),\n      cashAtEndOfPeriod: data\n        .map((element) => checkNumbers(element.cashAtEndOfPeriod, divider))\n        .slice(0, 4)\n        .reverse(),\n      cashAtBeginningOfPeriod: data\n        .map((element) =>\n          checkNumbers(element.cashAtBeginningOfPeriod, divider)\n        )\n        .slice(0, 4)\n        .reverse(),\n      operatingCashFlow: data\n        .map((element) => checkNumbers(element.operatingCashFlow, divider))\n        .slice(0, 4)\n        .reverse(),\n      capitalExpenditure: data\n        .map((element) => checkNumbers(element.capitalExpenditure, divider))\n        .slice(0, 4)\n        .reverse(),\n      freeCashFlow: data\n        .map((element) => checkNumbers(element.freeCashFlow, divider))\n        .slice(0, 4)\n        .reverse(),\n    });\n  }\n  useEffect(() => {\n    fetchIncomeStatement();\n  }, [context]);\n  return (\n    <div>\n      <h1> Cash Flow</h1>\n      <h6> Numbers to Millions</h6>\n      <table>\n        <tbody>\n          <tr>\n            <th>About</th>\n            {dataInfo.date.map((item) => (\n              <th key={item}>{item}</th>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Income</td>\n            {dataInfo.netIncome.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Depreciation and Amortization</td>\n            {dataInfo.depreciationAndAmortization.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Deferred Income Tax</td>\n            {dataInfo.deferredIncomeTax.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Stock Based Compensation</td>\n            {dataInfo.stockBasedCompensation.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Change In Working Capital</td>\n            {dataInfo.changeInWorkingCapital.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Accounts Receivables</td>\n            {dataInfo.accountsReceivables.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Inventory</td>\n            {dataInfo.inventory.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Accounts Payables</td>\n            {dataInfo.accountsPayables.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Working Capital</td>\n            {dataInfo.otherWorkingCapital.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Non-Cash Items</td>\n            {dataInfo.otherNonCashItems.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Cash Provided By Operating Activities</td>\n            {dataInfo.netCashProvidedByOperatingActivities.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Investments In Property Plant And Equipment</td>\n            {dataInfo.investmentsInPropertyPlantAndEquipment.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Acquisitions Net</td>\n            {dataInfo.acquisitionsNet.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Purchases Of Investments</td>\n            {dataInfo.purchasesOfInvestments.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Sales Maturities Of Investments</td>\n            {dataInfo.salesMaturitiesOfInvestments.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Investing Activites</td>\n            {dataInfo.otherInvestingActivites.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Cash Used For Investing Activites</td>\n            {dataInfo.netCashUsedForInvestingActivites.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Debt Repayment</td>\n            {dataInfo.debtRepayment.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common Stock Issued</td>\n            {dataInfo.commonStockIssued.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Common Stock Repurchased</td>\n            {dataInfo.commonStockRepurchased.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Dividends Paid</td>\n            {dataInfo.dividendsPaid.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Other Financing Activites</td>\n            {dataInfo.otherFinancingActivites.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Cash Used Provided By Financing Activities</td>\n            {dataInfo.otherFinancingActivites.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Effect Of Forex Changes On Cash</td>\n            {dataInfo.effectOfForexChangesOnCash.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Net Change In Cash</td>\n            {dataInfo.netChangeInCash.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Cash At End Of Period</td>\n            {dataInfo.cashAtEndOfPeriod.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Cash At Beginning Of Period</td>\n            {dataInfo.cashAtBeginningOfPeriod.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Operating Cash Flow</td>\n            {dataInfo.operatingCashFlow.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Capital Expenditure</td>\n            {dataInfo.capitalExpenditure.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n          <tr>\n            <td> Free Cash Flow</td>\n            {dataInfo.freeCashFlow.map((item) => (\n              <td key={item}>{item}</td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { finnhubApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\n\nexport const StockNews = () => {\n  const [context, setContext] = useContext(Context);\n  const [news, setNews] = useState({\n    headline: \"\",\n    image: \"\",\n    source: \"\",\n    url: \"\",\n    summary: \"\",\n  });\n  async function fetchStockNews() {\n    const res = await fetch(\n      `https://finnhub.io/api/v1/company-news?symbol=${context}&from=2021-09-01&to=2021-09-09&token=${finnhubApikey}`\n    );\n    const data = await res.json();\n    const [news1, news2, news3, news4] = [data[0], data[1], data[2], data[3]];\n    setNews({\n      headline: {\n        headline1: news1.headline,\n        headline2: news2.headline,\n        headline3: news3.headline,\n        headline4: news4.headline,\n      },\n      image: {\n        image1: news1.image,\n        image2: news2.image,\n        image3: news3.image,\n        image4: news4.image,\n      },\n      summary: {\n        summary1: news1.summary,\n        summary2: news2.summary,\n        summary3: news3.summary,\n        summary4: news4.summary,\n      },\n    });\n  }\n  useEffect(() => {\n    fetchStockNews();\n  }, [context]);\n\n  return (\n    <div style={{ margin: \"100px\" }}>\n      <div>\n        <img src={news.image.image1} width=\"200\" height=\"200\"></img>\n        <div> {news.headline.headline1}</div>\n        <div> {news.summary.summary1}</div>\n      </div>\n      <div className=\"News\"></div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { financialmodelingprepApikey } from \"../apikey/apikey\";\nimport { Context } from \"../Context/Context\";\nimport \"../css/App.css\";\nexport const Ratio = () => {\n  const [context] = useContext(Context);\n  const [ratio, setRatio] = useState({\n    dividendYielTTM: \"\",\n    dividendYielPercentageTTM: \"\",\n    peRatioTTM: \"\",\n    pegRatioTTM: \"\",\n    payoutRatioTTM: \"\",\n    currentRatioTTM: \"\",\n    quickRatioTTM: \"\",\n    cashRatioTTM: \"\",\n    daysOfSalesOutstandingTTM: \"\",\n    daysOfInventoryOutstandingTTM: \"\",\n    operatingCycleTTM: \"\",\n    daysOfPayablesOutstandingTTM: \"\",\n    cashConversionCycleTTM: \"\",\n    grossProfitMarginTTM: \"\",\n    operatingProfitMarginTTM: \"\",\n    pretaxProfitMarginTTM: \"\",\n    netProfitMarginTTM: \"\",\n    effectiveTaxRateTTM: \"\",\n    returnOnAssetsTTM: \"\",\n    returnOnEquityTTM: \"\",\n    returnOnCapitalEmployedTTM: \"\",\n    netIncomePerEBTTTM: \"\",\n    ebtPerEbitTTM: \"\",\n    ebitPerRevenueTTM: \"\",\n    debtRatioTTM: \"\",\n    debtEquityRatioTTM: \"\",\n    longTermDebtToCapitalizationTTM: \"\",\n    totalDebtToCapitalizationTTM: \"\",\n    interestCoverageTTM: \"\",\n    cashFlowToDebtRatioTTM: \"\",\n    companyEquityMultiplierTTM: \"\",\n    receivablesTurnoverTTM: \"\",\n    payablesTurnoverTTM: \"\",\n    inventoryTurnoverTTM: \"\",\n    fixedAssetTurnoverTTM: \"\",\n    assetTurnoverTTM: \"\",\n    operatingCashFlowPerShareTTM: \"\",\n    freeCashFlowPerShareTTM: \"\",\n    cashPerShareTTM: \"\",\n    operatingCashFlowSalesRatioTTM: \"\",\n    freeCashFlowOperatingCashFlowRatioTTM: \"\",\n    cashFlowCoverageRatiosTTM: \"\",\n    shortTermCoverageRatiosTTM: \"\",\n    capitalExpenditureCoverageRatioTTM: \"\",\n    dividendPaidAndCapexCoverageRatioTTM: \"\",\n    priceBookValueRatioTTM: \"\",\n    priceToBookRatioTTM: \"\",\n    priceToSalesRatioTTM: \"\",\n    priceEarningsRatioTTM: \"\",\n    priceToFreeCashFlowsRatioTTM: \"\",\n    priceToOperatingCashFlowsRatioTTM: \"\",\n    priceCashFlowRatioTTM: \"\",\n    priceEarningsToGrowthRatioTTM: \"\",\n    priceSalesRatioTTM: \"\",\n    dividendYieldTTM: \"\",\n    enterpriseValueMultipleTTM: \"\",\n    priceFairValueTTM: \"\",\n    dividendPerShareTTM: \"\",\n  });\n  async function fetchRatio() {\n    const res = await fetch(\n      `https://financialmodelingprep.com/api/v3/ratios-ttm/AAPL?apikey=${financialmodelingprepApikey}`\n    );\n    const data = await res.json();\n    console.log([0]);\n    setRatio({\n      dividendYielTTM: data[0].dividendYielTTM.toFixed(3),\n      dividendYielPercentageTTM: data[0].dividendYielPercentageTTM.toFixed(3),\n      peRatioTTM: data[0].peRatioTTM.toFixed(3),\n      pegRatioTTM: data[0].pegRatioTTM.toFixed(3),\n      payoutRatioTTM: data[0].payoutRatioTTM.toFixed(3),\n      currentRatioTTM: data[0].currentRatioTTM.toFixed(3),\n      quickRatioTTM: data[0].quickRatioTTM.toFixed(3),\n      cashRatioTTM: data[0].cashRatioTTM.toFixed(3),\n      daysOfSalesOutstandingTTM: data[0].daysOfSalesOutstandingTTM.toFixed(3),\n      daysOfInventoryOutstandingTTM:\n        data[0].daysOfInventoryOutstandingTTM.toFixed(3),\n      operatingCycleTTM: data[0].operatingCycleTTM.toFixed(3),\n      daysOfPayablesOutstandingTTM:\n        data[0].daysOfPayablesOutstandingTTM.toFixed(3),\n      cashConversionCycleTTM: data[0].cashConversionCycleTTM.toFixed(3),\n      grossProfitMarginTTM: data[0].grossProfitMarginTTM.toFixed(3),\n      operatingProfitMarginTTM: data[0].operatingProfitMarginTTM.toFixed(3),\n      pretaxProfitMarginTTM: data[0].pretaxProfitMarginTTM.toFixed(3),\n      netProfitMarginTTM: data[0].netProfitMarginTTM.toFixed(3),\n      effectiveTaxRateTTM: data[0].effectiveTaxRateTTM.toFixed(3),\n      returnOnAssetsTTM: data[0].returnOnAssetsTTM.toFixed(3),\n      returnOnEquityTTM: data[0].returnOnEquityTTM.toFixed(3),\n      returnOnCapitalEmployedTTM: data[0].returnOnCapitalEmployedTTM.toFixed(3),\n      netIncomePerEBTTTM: data[0].netIncomePerEBTTTM.toFixed(3),\n      ebtPerEbitTTM: data[0].ebtPerEbitTTM.toFixed(3),\n      ebitPerRevenueTTM: data[0].ebitPerRevenueTTM.toFixed(3),\n      debtRatioTTM: data[0].debtRatioTTM.toFixed(3),\n      debtEquityRatioTTM: data[0].debtEquityRatioTTM.toFixed(3),\n      totalDebtToCapitalizationTTM:\n        data[0].totalDebtToCapitalizationTTM.toFixed(3),\n      interestCoverageTTM: data[0].interestCoverageTTM.toFixed(3),\n      cashFlowToDebtRatioTTM: data[0].cashFlowToDebtRatioTTM.toFixed(3),\n      companyEquityMultiplierTTM: data[0].companyEquityMultiplierTTM.toFixed(3),\n      receivablesTurnoverTTM: data[0].receivablesTurnoverTTM.toFixed(3),\n      payablesTurnoverTTM: data[0].payablesTurnoverTTM.toFixed(3),\n      inventoryTurnoverTTM: data[0].inventoryTurnoverTTM.toFixed(3),\n      fixedAssetTurnoverTTM: data[0].fixedAssetTurnoverTTM.toFixed(3),\n      assetTurnoverTTM: data[0].assetTurnoverTTM.toFixed(3),\n      operatingCashFlowPerShareTTM:\n        data[0].operatingCashFlowPerShareTTM.toFixed(3),\n      freeCashFlowPerShareTTM: data[0].freeCashFlowPerShareTTM.toFixed(3),\n      cashPerShareTTM: data[0].cashPerShareTTM.toFixed(3),\n      operatingCashFlowSalesRatioTTM:\n        data[0].operatingCashFlowSalesRatioTTM.toFixed(3),\n      freeCashFlowOperatingCashFlowRatioTTM:\n        data[0].freeCashFlowOperatingCashFlowRatioTTM.toFixed(3),\n      cashFlowCoverageRatiosTTM: data[0].cashFlowCoverageRatiosTTM.toFixed(3),\n      shortTermCoverageRatiosTTM: data[0].shortTermCoverageRatiosTTM.toFixed(3),\n      capitalExpenditureCoverageRatioTTM:\n        data[0].capitalExpenditureCoverageRatioTTM.toFixed(3),\n      dividendPaidAndCapexCoverageRatioTTM:\n        data[0].dividendPaidAndCapexCoverageRatioTTM.toFixed(3),\n      priceBookValueRatioTTM: data[0].priceBookValueRatioTTM.toFixed(3),\n      priceToBookRatioTTM: data[0].priceToBookRatioTTM.toFixed(3),\n      priceToSalesRatioTTM: data[0].priceToSalesRatioTTM.toFixed(3),\n      priceEarningsRatioTTM: data[0].priceEarningsRatioTTM.toFixed(3),\n      priceToFreeCashFlowsRatioTTM:\n        data[0].priceToFreeCashFlowsRatioTTM.toFixed(3),\n      priceToOperatingCashFlowsRatioTTM:\n        data[0].priceToOperatingCashFlowsRatioTTM.toFixed(3),\n      priceCashFlowRatioTTM: data[0].priceCashFlowRatioTTM.toFixed(3),\n      priceEarningsToGrowthRatioTTM:\n        data[0].priceEarningsToGrowthRatioTTM.toFixed(3),\n      priceSalesRatioTTM: data[0].priceSalesRatioTTM.toFixed(3),\n      dividendYieldTTM: data[0].dividendYieldTTM.toFixed(3),\n      enterpriseValueMultipleTTM: data[0].enterpriseValueMultipleTTM.toFixed(3),\n      priceFairValueTTM: data[0].priceFairValueTTM.toFixed(3),\n      dividendPerShareTTM: data[0].dividendPerShareTTM.toFixed(3),\n    });\n  }\n  useEffect(() => {\n    fetchRatio();\n  }, [context]);\n\n  return (\n    <>\n      <div style={{ backgroundColor: \"#f5f5f5\", height: \"auto\" }}>\n        <div className=\"RatioTable\">\n          <table>\n            <tbody>\n              <tr>\n                <th>Ratios</th>\n              </tr>\n              <tr>\n                <td>Dividend Yield : {ratio.dividendYielTTM}</td>\n                <td>\n                  Dividend Yield Percentage :\n                  {ratio.dividendYielPercentageTTM + \"%\"}\n                </td>\n                <td>Dividend Yield : P/E Ratio: {ratio.peRatioTTM}</td>\n                <td>Dividend Yield : PEG Ratio: {ratio.pegRatioTTM}</td>\n                <td>Dividend Yield : PEG Ratio: {ratio.pegRatioTTM}</td>\n              </tr>\n              <tr>\n                <td>Payout Ratio: {ratio.payoutRatioTTM}</td>\n                <td>Current Ratio {ratio.currentRatioTTM}</td>\n                <td>Quick Ratio: {ratio.quickRatioTTM}</td>\n                <td>\n                  Days of Sales Outstanding: {ratio.daysOfSalesOutstandingTTM}\n                </td>\n                <td>\n                  Days of Sales Outstanding: {ratio.daysOfSalesOutstandingTTM}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Days of Sales Outstanding: {ratio.daysOfSalesOutstandingTTM}\n                </td>\n                <td>Cash Ratio: {ratio.cashRatioTTM}</td>\n                <td>\n                  Days of inventory Outstanding:\n                  {ratio.daysOfInventoryOutstandingTTM}\n                </td>\n                <td>Operating Cycle: {ratio.operatingCycleTTM}</td>\n                <td>\n                  Days of Payable Outstanding{\" \"}\n                  {ratio.daysOfPayablesOutstandingTTM}\n                </td>\n              </tr>\n              <tr>\n                <td>Cash conversion cycle {ratio.cashConversionCycleTTM}</td>\n                <td>Gross profit margin: {ratio.grossProfitMarginTTM}</td>\n                <td>\n                  Operating profit margin: {ratio.operatingProfitMarginTTM}\n                </td>\n                <td>Pre tax profit margin: {ratio.pretaxProfitMarginTTM}</td>\n                <td>Net profit margin: {ratio.netProfitMarginTTM}</td>\n              </tr>\n              <tr>\n                <td>Effective tax rate: {ratio.effectiveTaxRateTTM}</td>\n                <td>Return on assets: {ratio.returnOnAssetsTTM}</td>\n                <td>Return on equity {ratio.returnOnEquityTTM}</td>\n                <td>\n                  Return on capital employed: {ratio.returnOnCapitalEmployedTTM}\n                </td>\n                <td>Net income per EBT: {ratio.netIncomePerEBTTTM}</td>\n              </tr>\n              <tr>\n                <td>EBT per EBIT: {ratio.ebtPerEbitTTM}</td>\n                <td>EBIT per Revenue: {ratio.ebitPerRevenueTTM}</td>\n                <td>Debt ratio: {ratio.debtRatioTTM}</td>\n                <td>Debt equity ratio: {ratio.debtEquityRatioTTM}</td>\n                <td>\n                  Total debt to capitalization:\n                  {ratio.totalDebtToCapitalizationTTM}\n                </td>\n              </tr>\n              <tr>\n                <td>Interest Coverage: {ratio.interestCoverageTTM}</td>\n                <td>Cashflow to debt ratio: {ratio.cashFlowToDebtRatioTTM}</td>\n                <td>\n                  Company equity mutliplier: {ratio.companyEquityMultiplierTTM}\n                </td>\n                <td>Receibables turnover: {ratio.receivablesTurnoverTTM}</td>\n                <td>Payables turnover: {ratio.payablesTurnoverTTM}</td>\n              </tr>\n              <tr>\n                <td>Invetory turnover: {ratio.inventoryTurnoverTTM}</td>\n                <td>Fixed assets turnover {ratio.fixedAssetTurnoverTTM}</td>\n                <td>Assets turnover {ratio.assetTurnoverTTM}</td>\n                <td>\n                  Operating cash flow per share\n                  {ratio.operatingCashFlowPerShareTTM}\n                </td>\n                <td>\n                  Free cashflow operating cashflow ratio:\n                  {ratio.freeCashFlowOperatingCashFlowRatioTTM}\n                </td>\n              </tr>\n              <tr>\n                <td>Cash per share: {ratio.cashPerShareTTM}</td>\n                <td>\n                  Operating cash flow sales ratio:\n                  {ratio.operatingCashFlowSalesRatioTTM}\n                </td>\n                <td>\n                  Free cashflow per share: {ratio.freeCashFlowPerShareTTM}\n                </td>\n                <td>\n                  Operating cashflow sales ratio:\n                  {ratio.operatingCashFlowSalesRatioTTM}\n                </td>\n                <td>\n                  Free cashflow operating cash flow ratio:\n                  {ratio.freeCashFlowOperatingCashFlowRatioTTM}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Cash flow coverage ratios: {ratio.cashFlowCoverageRatiosTTM}\n                </td>\n                <td>\n                  Short term coverage ratios: {ratio.shortTermCoverageRatiosTTM}\n                </td>\n                <td>\n                  Capital expenditure coverage ratio:\n                  {ratio.capitalExpenditureCoverageRatioTTM}\n                </td>\n                <td>\n                  Dividend paid and capex coverage ratio:\n                  {ratio.dividendPaidAndCapexCoverageRatioTTM}\n                </td>\n                <td>Price book value ratio: {ratio.priceBookValueRatioTTM}</td>\n              </tr>\n              <tr>\n                <td>Price to book ratio: {ratio.priceToBookRatioTTM}</td>\n                <td>Price to sales ratio: {ratio.priceToSalesRatioTTM}</td>\n                <td>Price earnings ratio: {ratio.priceEarningsRatioTTM}</td>\n                <td>\n                  Price to free cashflow ratio:\n                  {ratio.priceToFreeCashFlowsRatioTTM}\n                </td>\n                <td>\n                  Price to operating cashflows ratio:\n                  {ratio.priceToOperatingCashFlowsRatioTTM}\n                </td>\n              </tr>\n              <tr>\n                <td>Price cashflow ratio: {ratio.priceCashFlowRatioTTM}</td>\n                <td>\n                  Price earings to growth ratio:{\" \"}\n                  {ratio.priceEarningsToGrowthRatioTTM}{\" \"}\n                </td>\n                <td>Price sales ratio: {ratio.priceSalesRatioTTM}</td>\n                <td>Dividend yield: {ratio.dividendYieldTTM}</td>\n                <td>\n                  Enterprise value mutliplier:{\" \"}\n                  {ratio.enterpriseValueMultipleTTM}\n                </td>\n              </tr>\n              <tr>\n                <td>Price fair value: {ratio.priceFairValueTTM}</td>\n                <td>Dividend per share: {ratio.dividendPerShareTTM}</td>\n                <td>Dividend yield: {ratio.dividendYieldTTM}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n\n//\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Stocks } from \"../Financials/Stocks\";\nimport { BalanceSheet } from \"../Financials/BalanceSheet\";\nimport { CashFlow } from \"../Financials/CashFlow\";\nimport { IncomeStatement } from \"../Financials/IncomeStatement\";\nimport News from \"../News/News\";\nimport ChartLine from \"../Charts/ChartLine\";\nimport { RevenueEarning } from \"../Charts/RevenueEarning\";\nimport { StockNews } from \"../News/StockNews\";\nimport { Ratio } from \"../Financials/Ratios\";\nexport const RoutesComponent = () => {\n  return (\n    <>\n      <Routes>\n        <Route exact path=\"/\" element={<News />}></Route>\n        <Route path=\"news\" element={<News />} />\n        <Route path=\"stocks\" element={<Stocks />}>\n          <Route path=\"/stocks\" element={<StockNews />} />\n          <Route path=\"news\" element={<StockNews />} />\n          <Route path=\"cashflow\" element={<CashFlow />} />\n          <Route path=\"incomestatement\" element={<IncomeStatement />} />\n          <Route path=\"balancesheet\" element={<BalanceSheet />} />\n          <Route path=\"chart\" element={<ChartLine />} />\n          <Route path=\"revenue\" element={<RevenueEarning />} />\n          <Route path=\"ratio\" element={<Ratio />} />\n        </Route>\n      </Routes>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./css/App.css\";\nimport News from \"../src/News/News\";\nimport ChartLine from \"./Charts/ChartLine\";\nimport { Context } from \"./Context/Context\";\nimport { RevenueEarning } from \"./Charts/RevenueEarning\";\nimport { Recommendation } from \"./Financials/Recommendation\";\nimport { CashFlow } from \"./Financials/IncomeStatement\";\nimport { BrowseBar } from \"./Financials/BrowseBar\";\nimport { BrowseFinancial } from \"./NavBar/BrowseFinancial\";\nimport InputForm from \"../src/InputForm/InputForm\";\n// import { Search } from \"./Search/Search\";\nimport { NavBar } from \"./NavBar/NavBar\";\nimport { Banner } from \"./Banner/Banner\";\nimport { MergerNews } from \"./News/MergerNews\";\nimport { Stocks } from \"./Financials/Stocks\";\nimport { Outlet } from \"react-router-dom\";\nimport { RoutesComponent } from \"./Router/RoutesComponent\";\nfunction App() {\n  const [context, setContext] = useState(\"AAPL\");\n  return (\n    <div className=\"App\">\n      <Context.Provider value={[context, setContext]}>\n        <Banner></Banner>\n        <NavBar></NavBar>\n        {/* <Search></Search> */}\n        {/* <MergerNews></MergerNews> */}\n        {/* <InputForm></InputForm> */}\n        {/* <BrowseBar></BrowseBar> */}\n        {/* <ChartLine></ChartLine> */}\n        {/* <RevenueEarning></RevenueEarning> */}\n        {/* <Recommendation></Recommendation> */}\n        {/* <StockScreener></StockScreener> */}\n        {/* <News></News> */}\n        <RoutesComponent></RoutesComponent>\n      </Context.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}